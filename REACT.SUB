*********************************************************************************			PROCESS ALL HIT REACTIONS*************************************************************************************************************************     STOP COLLISIONS FROM LAGGING*	     BY RESPONING NOW****************************************COL_UPDATE	LDX	A,CURANI	;IF DOING RAIDEN DIVE		CP	SEQ_PAIRCROSS	;RET IF DOING DROP DOWN		RET	Z		CP	SEQ_DEAD     	;RETURN IF IM DEAD		RET	Z		CP	SEQ_FATAL_MOVE		RET	Z		LDX	A,CURANI	;RETURN IF IM DEAD		CALL	GET_SEQ_DATA		BIT	_SDBIT,A		JP	NZ,@NAILHIM		BIT	_REACTBIT,A		RET	NZ@NAILHIM	CALL	GET_HIS_ACTION		CP	SEQ_THROW		JP	Z,IM_THROWN2		CALL	YOU_HIT_ME	;HAVE I BEEN HIT		RET	NC		;RET IF NOT		LDX	A,DAMAGE	;ADD DAMAGE UP		INC	A		STX	DAMAGE,A		LD	A,1	   	;SIGNAL A HIT		LD	(HITFLAG),A			JP	(HL)		;JUMP TO REACTION HANDLER*****************************************	      IVE_HIT_YOU*	      ~~~~~~~~~~~*      IVE HIT HIM MAKE HIM FALL****************************************IVE_HIT_YOU	LD	A,(SPRNUM)		AND	A		JP	Z,@IMPLAY0@IMPLAY1	LDX	A,CURANI		;PLAYER 0 HIT		LD	(SPRHIT0),A		LDX	A,SBASE		LD	(WHOHIT0),A		RET@IMPLAY0	LDX	A,CURANI		;PLAYER 1 HIT		LD	(SPRHIT1),A		LDX	A,SBASE		LD	(WHOHIT1),A		RET*****************************************	      YOU_HIT_ME*	      ~~~~~~~~~~*  TEST IF HE'S HIT ME MAKE ME FALL****************************************YOU_HIT_ME	LD	A,(SPRNUM)		;GET HL TO POINT AT HITFLAG		AND	A		JP	Z,@IMPLAY0		LD	HL,SPRHIT1		JP	@PROCHIT@IMPLAY0	LD	HL,SPRHIT0@PROCHIT	LD	A,(HL)			;C HOLD HIT ACTION		AND	A		JP	Z,@CLEARHIT		LD	(HL),0			;CLEAR HITSPRX		LD	C,A		LD	(WHAT_HIT_WITH),A			INC	HL	      		;SAVE LAST TO HIT ME		LD	A,(HL)		LD	(WHO_HIT_ME),A		CP	_WKANO			;IF WEAP IS HITTING		JP	NC,@OK			;JUMP		LDX	A,CURANI		CP	SEQ_DIVE		JP	Z,@CLEARHIT		LD	A,C			;C = WHAT HIT WITH		CP	SEQ_DIVE		;DON'T LET ANYTHING HIT ME		JP	Z,@HIT2@OK		CALL	REACTION		;GET REACTION TO HIT		JP	NC,@CLEARHIT		;JUMP IF NO HIT BLOCKED		  @HIT		SCF		RET@HIT2		LD	HL,HIT_BY_DIVE		LD	A,#62		LD	(HITPOWER),A		LD	A,SC_2000		LD	(HITSCORE),A				SCF		RET@CLEARHIT	OR	A		RET*****************************************        DO COLLISION SCANNING*	  WHEN HITHOME EQUALS**	   0 = NO HIT AT ALL*	   1 = IVE HIT HOME*	   2 = IVE MISSED HIM****************************************DO_COLLIS	XOR	A		LD	(HITHOME),A			LD	A,(ANIM_HIT)		;SCAN FOR COLLISION TEST		AND	A		RET	Z		CALL	GET_HIS_ACTION		CP	SEQ_STUMBLE		JP	Z,FROZ		CP	SEQ_FROZEN		JP	Z,FROZ		CALL	AM_I_FACING_HIM		RET	NC		CALL	FACING_SAME		RET	CFROZ		LD	A,%00000011		CALL	SCAN_COL		JP	NC,@MISS		CALL	IVE_HIT_YOU		LD	A,1		LD	(HITHOME),A		RET@MISS		LD	A,2		LD	(HITHOME),A		RET*****************************************	    REACTION TABLE****************************************REACTS		MACRO		DB	\1,\2,\3,\4,\5		DW	\6		ENDMGORO_IMMUNE	EQU	1EMP_IMMUNE	EQU	2GI_BIT		EQU	0EI_BIT		EQU	1NUM		= 	0		EQUINC	SC_0		EQUINC	SC_100		EQUINC	SC_200		EQUINC	SC_500		EQUINC	SC_1000		EQUINC	SC_2000		EQUINC	SC_5000		EQUINC	SC_10000		EQUINC	SC_20000		EQUINC	SC_50000		EQUINC	SC_100000		EQUINC	SC_200000		EQUINC	SC_500000		EQUINC	SC_1000000REACT_TAB	DB	SEQ_UPPERC,HB+LB+SW+LK+DK	;SEQ,BLOCKS		DB	0,7,#82		;IMMUNES,DIST,DAMAGE-BLOCK		DB	SC_2000		DW	BIGUPCUT			;REACTION ROUTINE		DB	SEQ_PUNCHI,HB+LB+DK+LK		DB	GORO_IMMUNE,7,#21		DB	SC_500		DW	HEADBACK		DB	SEQ_RHOUSE,HB+LB+DK+LK+SW		DB	0,#FF,#62		DB	SC_2000		DW	KNOCKOVER			;HEADBACK		DB	SEQ_KNEE,HB		DB	0,#FF,#41		DB	SC_5000		DW	SMALLKNOCK		DB	SEQ_SWEEP,LB+AB		DB	GORO_IMMUNE,10,#41		DB	SC_1000		DW	SWEPTOVER		DB	SEQ_KICKDUCK,SW+LK		DB	GORO_IMMUNE,9,#41		DB	SC_500		DW	MOVED		DB	SEQ_JUMPKICK,HB+LB		DB	0,#FF,#41		DB	SC_2000		DW	KNOCKOVER		DB	SEQ_KICKHIGH,HB+LB+DK		DB	0,#FF,#51		DB	SC_2000		DW	HEADBACK		DB	SEQ_ELBOW,HB+LB+DK+LK+SW+AB+HP+HK		DB	GORO_IMMUNE,#FF,#41		DB	SC_2000		DW	HEADBACK		DB	SEQ_THROW,0			;HB+HP+HK+SW		DB	GORO_IMMUNE+EMP_IMMUNE,7,#51		DB	SC_2000		DW	IM_THROWN		DB	SEQ_JUMPPUNCH,HB+LB+DK		DB	0,#FF,#51		DB	SC_1000		DW	KNOCKOVER		DB	SEQ_WEAPON_HIT,HB+LB+DK		DB	0,#FF,#51		DB	SC_2000		DW	HITBYWEAPON		DB	SEQ_SZSLIDE,LB+AB		DB	GORO_IMMUNE,#FF,#51		DB	SC_1000		DW	SMALLKNOCK		DB	SEQ_SCORP_TELE,HB+LB+DK+SW+LK		DB	0,#FF,#31		DB	SC_2000		DW	SMALLKNOCK		DB	SEQ_HEADBUTT,HB+LB+DK+SW+LK+AB		DB	0,#FF,#41		DB	SC_2000		DW	HEADBACK		DB	SEQ_KANOSPIN,HB+LB+LK+DK		DB	0,#FF,#61		DB	SC_2000		DW	KNOCKOVER		DB	SEQ_SCISSOR,LB+LK+AB+UC		DB	GORO_IMMUNE+EMP_IMMUNE,7,#61		DB	SC_2000		DW	LEGGED		DB	SEQ_SUPERLIZ,SW+LK		DB	0,#FF,#51		DB	SC_2000		DW	SMALLKNOCK		DB	SEQ_DIVE,HB+LB		DB	0,#06,#62		DB	SC_2000		DW	HIT_BY_DIVE		DB	SEQ_KANGKICK,HB+LB+SW+LK		DB	0,#FF,#51		DB	SC_2000		DW	KNOCKOVER		DB	SEQ_GORO_BHAND,HB+LB		DB	0,#FF,#C5		DB	SC_10000		DW	SMALLKNOCK		DB	SEQ_GORO_PUNCH,HB+LB		DB	0,#FF,#C5		DB	SC_10000		DW	SMALLKNOCK		DB	SEQ_GORO_JUMP,0		DB	0,#FF,#E7		DB	SC_20000		DW	JUMPED_BY_GORO		DB	SEQ_FATAL_MOVE,0		DB	0,#FF,#E7		DB	SC_20000		DW	FATAL_BLOW		DB	0*****************************************     GENERATE A REACTION TO A HIT*            TEST IF BLOCKED*           LEGAL HIT TESTING*	    ~~~~~~~~~~~~~~~~~* 	      C = HIT TYPE*     HL = POINTS TO HANDLE ROUTINE**       CARRY SET IF HIT IS LEGAL****************************************REACTLEN	EQU	8REACTION	LD	HL,REACT_TAB	;POINT TO REATIONS		LD	DE,8 		;BUFFER ENTRY SIZE@LOOP		LD	A,(HL)		;IS THIS A REACTION SEQ		CP	C		JP	Z,@FOUND	;YES !! JUMP ??		ADD	HL,DE		;GET NEXT BUFFER		AND	A		;LAST N TREE ??		JP	NZ,@LOOP	;JUMP IF NOT		OR	A		;LEAVE IF ACTION NOT FOUND		RET@FOUND		INC	HL		;SKIP OVER SEQ		LD	E,(HL)		;GET BLOCKS		INC	HL   		;SKIP BLOCKS		LD	D,(HL)		;GET IMMUNES		INC	HL		;SKIP IMMUNES;----------------------------------------;	    ** FLOW THROUGH **;----------------------------------------;	       TEST IMMUNES;----------------------------------------		LDX	A,SBASE		;GET CURRENT PLAYER		BIT	GI_BIT,D	;IS GORO'S BIT SET		JP	Z,@NOTGORO		CP	_GORO		;AM I GORO		JP	Z,@NOHIT	;JUMP IF I AM@NOTGORO	BIT	EI_BIT,D	;IS EMPOROR'S BIT SET		JP	Z,@NOTEMP		CP	_EMP		;AM I EMP		JP	Z,@NOHIT	;JUMP IF I AM@NOTEMP;----------------------------------------;	    ** FLOW THROUGH **;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		LDX	A,CURANI		BIT	HB_BIT,E		;CAN I HIGH BLOK ?		JP	Z,@NOTHIGH		;JUMP IF NOT		CP	SEQ_HIBLOCK		;AM I HIGH BLOCKING		JP	Z,@BLOCKED		;IF YES JUMP@NOTHIGH;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		BIT	LB_BIT,E		;CAN I LOW BLOCK		JP	Z,@NOTLOW		;JUMP IF NOT				CP	SEQ_DUCKBLOK		;AM I LOW BLOCKING		JP	Z,@BLOCKED		;IF YES JUMP@NOTLOW;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		BIT	DK_BIT,E		;CAN I DUCK		JP	Z,@NOTDUCK		;JUMP IF NOT		CP	SEQ_DUCK		;IF DUCK TO AVIOD THEN		JP	Z,@NOHIT		;JUMP@NOTDUCK;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		BIT	SW_BIT,E		;IS SWEEP IMMUNE TO THIS		JP	Z,@NOTSW		;JUMP IF NOT		CP	SEQ_SWEEP		;AM I SWEEPING		JP	Z,@NOHIT		;JUMP IF YES@NOTSW;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		BIT	HK_BIT,E		JP	Z,@NOTHK		CP	SEQ_KICKHIGH		JP	Z,@NOHIT@NOTHK;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		BIT	HP_BIT,E		;TEST FOR HI PUNCH		JP	Z,@NOTHP		CP	SEQ_PUNCHI		JP	Z,@NOHIT@NOTHP;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		BIT	LK_BIT,E		;TEST FOR LOW KICK		JP	Z,@NOTLK		CP	SEQ_KICKDUCK		JP	Z,@NOHIT@NOTLK;----------------------------------------;	     TEST FOR BLOCKS;----------------------------------------		BIT	AB_BIT,E		;TEST FOR LOW KICK		JP	Z,@NOTAB		CALL	GET_SEQ_DATA		;GET HIS SEQ DATA		BIT	_AIRBORNBIT,A		;TEST AIRBORN BIT		JP	NZ,@NOHIT		;IF HE'S AIRBORN NO HIT@NOTAB;----------------------------------------;	    ** FLOW THROUGH **;----------------------------------------;	    TEST FOR PROXIMITY;----------------------------------------		LD	E,(HL)		;GET MHD		INC	HL		;SKIP MHD		LD	A,E		CP	#FF		JP	Z,@NEXT		CALL	FIND_MHD	;GET PLAY DIST		CP	E		;A = DISTANCE		JP	NC,@NOHIT		@NEXT		LD	A,(HLI)	    	;SAVE POWER OF THIS HIT 		LD	(HITPOWER),A		LD	A,(HLI)	   	;SAVE SCORE FOR THIS HIT		LD	(HITSCORE),A		LD	A,(WHO_HIT_ME)	;IS THIS SUBZ ICE BLAST		CP	_WSUBZERO	;IF IT IS DONT CHECK FOR AIRBORN		JP	Z,@ITSICE		CP	_WSCORPION	;IF THIS IS SPEAR IGNORE		JP	Z,@ITSICE		LDX	A,CURANI	;IS HE AIRBORN			CALL	GET_SEQ_DATA			BIT	_AIRBORNBIT,A			JP	NZ,@SETKNOCK@ITSICE		LD	A,(HLI)		;GET HANDLER ADDRESS		LD	H,(HL)		LD	L,A		SCF		RET@SETKNOCK	LD	HL,FALLDOWN	;IF HIT IN AIR FALL DOWN		LDX	A,SBASE		;UNLESS WE ARE GORO		CP	_GORO		JP	Z,@NOHIT		SCF		RET@NOHIT		OR	A		RET@BLOCKED	LD	A,1  		;MOVE HIM A BIT		CALL	LOR_VEL		CALL	ROPE_OFF		LD	A,#1D		CALL	SFX_PLAY		LD	A,(WHO_HIT_ME)		CP	_WSUBZERO		RET	Z		CALL	DEC_BLOK_ENERGY		OR	A		RET*****************************************       GET HIT POWER OF SEQUENCE****************************************;		 0     1       2      3       4        5     6-7;FORMAT :-	SEQ, BLOCKS, IMMUNE, DIST, HITPOWER, SCORE, HITPRGGET_HIT_POWER	LD	C,A		LD	HL,REACT_TAB	;POINT TO REATIONS		LD	DE,8 		;BUFFER ENTRY SIZE@LOOP		LD	A,(HL)		;IS THIS A REACTION SEQ		CP	C		JP	Z,@FOUND	;YES !! JUMP ??		ADD	HL,DE		;GET NEXT BUFFER		AND	A		;LAST N TREE ??		JP	NZ,@LOOP	;JUMP IF NOT		XOR	A		;LEAVE IF ACTION NOT FOUND		RET@FOUND		LD	DE,4		ADD	HL,DE		LD	A,(HL)		RET*****************************************       TEST TO SEE IF A ATTACK*	      IS A THREAT*     CARRY SET IF HIT IS A THREAT****************************************THREAT		CALL	GET_HIS_ACTION	;GET HIS ACTIONTEST_THREAT	LD	C,A		;C = SEQ NUM		LD	HL,REACT_TAB	;POINT TO REATIONS		LD	DE,8 		;BUFFER ENTRY SIZE@LOOP		LD	A,(HL)		;IS THIS A REACTION SEQ		CP	C		JP	Z,@FOUND	;YES !! JUMP ??		ADD	HL,DE		;GET NEXT BUFFER		AND	A		;LAST N TREE ??		JP	NZ,@LOOP	;JUMP IF NOT		OR	A		;LEAVE IF ACTION NOT FOUND		RET@FOUND		INC	HL		;SKIP OVER SEQ		LD	A,(HLI)		;GET BLOCKS		LD	E,A		LD	A,(HLI)		;GET IMMUNES		LD	D,A		;SKIP IMMUNES;----------------------------------------;	    ** FLOW THROUGH **;----------------------------------------;	       TEST IMMUNES;----------------------------------------		LDX	A,SBASE		;GET CURRENT PLAYER		BIT	GI_BIT,D	;IS GORO'S BIT SET		JP	Z,@NOTGORO		CP	_GORO		;AM I GORO		;JP	Z,@NOHIT	;JUMP IF I AM@NOTGORO	BIT	EI_BIT,D	;IS EMPOROR'S BIT SET		JP	Z,@NOTEMP		CP	_EMP		;AM I EMP		;JP	Z,@NOHIT	;JUMP IF I AM@NOTEMP;----------------------------------------;	    ** FLOW THROUGH **;----------------------------------------;	    TEST FOR PROXIMITY;----------------------------------------		LD	E,(HL)		;GET MHD		INC	HL		;SKIP MHD		LD	A,E		CP	#FF		JP	NZ,@NEXT		LD	E,6		;DEFAULT VALUE@NEXT		CALL	FIND_MHD	;GET PLAY DIST		CP	E		;A = DISTANCE		JP	NC,@NOHIT				LD	A,(HLI)	    	;SAVE POWER OF THIS HIT 		SCF		RET@NOHIT		XOR	A		RET*****************************************    	      HIT BY WEAPON****************************************HITBYWEAPON	LD	A,(WHO_HIT_ME)		CP	_WSCORPION		JP	Z,HIT_BY_SCORP		CP	_WSUBZERO		JP	Z,HIT_BY_SUBZ		LD	A,SEQ_WEAPON_HIT		JP	ANIM_THAT*****************************************	HIT BY SUBZERO WEAPON****************************************HIT_BY_SUBZ	LDX	A,CURANI		CP	SEQ_FROZEN		;CHICKEN	   	JP	Z,@FREEZEFUCKER		LD	A,SEQ_FROZEN		CALL	SET_ANI		JP	END_THAT@FREEZEFUCKER	CALL	ICE_BACKFIRE		LD	A,7		LD	(ICEBACKTIME),A		JP	DO_CLRHITICE_BACKFIRE	LD	A,(SPRNUM)		AND	A		JP	Z,@IMPLAY0@IMPLAY1	LD	A,SEQ_WEAPON_HIT		LD	(SPRHIT0),A		LD	A,_WSUBZERO		LD	(WHOHIT0),A		RET@IMPLAY0	LD	A,SEQ_WEAPON_HIT		LD	(SPRHIT1),A		LD	A,_WSUBZERO		LD	(WHOHIT1),A		RET*****************************************            HIT BY SCORPION****************************************HIT_BY_SCORP	LD	A,SEQ_GETOVERHERE		CALL	SET_ANI		CALL	DEC_FULL_ENERGY		MOVE	HITBYSCHITBYSC		CALL	DO_ANIM		LD	A,(ANIM_ENDED)		AND	A		RET	Z		MOVE	HITBYSC2HITBYSC2	CALL	DO_PROCS		LD	A,(ANIM_ENDED)		AND	A		RET	Z		JP	DO_CLRHIT*****************************************    UPPER CUT REACTION HANDLER****************************************BIGUPCUT	LDX	A,SBASE		CP	_GORO		JP	Z,SMALLKNOCK		LD	A,10		CALL	LOR_VEL		STX	YSPD,-4				LD	A,SEQ_UPCUTTED		JP	ANIM_THAT*****************************************    HIT IN HEAD REACTION HANDLER****************************************HEADBACK	LD	A,SEQ_HEADBACK		JP	ANIM_THATDIVERT_PUNCH	CALL	GET_HIS_ACTION		CP	SEQ_PUNCHI		JP	NZ,_ANIEND		RET*****************************************    KNOCKED OVER REACTION HANDLER****************************************SMALLKNOCK	LD	A,4		CALL	LOR_VEL		LD	A,SEQ_KNOCKED		JP	ANIM_THAT*****************************************    KNOCKED OVER REACTION HANDLER****************************************KNOCKOVER	LD	A,8		CALL	LOR_VEL		LD	A,SEQ_KNOCKED		JP	ANIM_THAT*****************************************      HIT IN AIR REACTION HANDLER****************************************FALLDOWN	LD	A,2		CALL	LOR_VEL		LD	A,SEQ_KNOCKED		JP	ANIM_THAT*****************************************         HIT BY A FATAL BLOW****************************************FATALTAB	DW	ANI_STANCE			;CAGE				DW	KANO_FATAL_HIT			;KANO				DW	RAID_FATAL_HIT			;RAIDEN				DW	KANG_FATAL_HIT			;KANG				DW	SCORP_FATAL_HIT			;SCORPION		DW	SUBZ_FATAL_HIT			;SUBZERO			DW	SCORP_FATAL_HIT			;LIZ		FATAL_BLOW	LD	A,1		LD	(FATALITY),A		LD	A,(WHO_HIT_ME)		ADD	A,A		LD	C,A		LD	B,0		LD	HL,FATALTAB		ADD	HL,BC		LD	A,(HLI)		LD	H,(HL)		LD	L,A		CALL	SET_ANI_HL		LD	A,SEQ_HIT_FATAL		STX	CURANI,A				JP	END_THAT*****************************************       SWEPT REACTION HANDLER****************************************SWEPTOVER	LD	A,SEQ_SWEPT		JP	ANIM_THAT*****************************************       SWEPT REACTION HANDLER****************************************LEGGED		LD	A,SEQ_LIZLEGGED		JP	ANIM_THAT*****************************************          HIT BY RAIDEN DIVE****************************************HIT_BY_DIVE	LD	A,SEQ_DIVE_HIT		JP	ANIM_THAT*****************************************    MOVED BY KICK REACTION HANDLER****************************************MOVED		LD	A,SEQ_MOVED		JP	ANIM_THAT*****************************************        JUMPED BY GORO REACTION****************************************JUMPED_BY_GORO	LD	A,SEQ_JUMPED_ON		JP	ANIM_THAT*****************************************   		 THROWN****************************************IM_THROWN2	LD	A,#51		LD	(HITPOWER),A		LD	A,SC_2000		LD	(HITSCORE),A		IM_THROWN	LD	A,SEQ_THROWNANIM_THAT	CALL	SET_ANI		CALL	DEC_FULL_ENERGYEND_THAT	MOVE	THR1THR1		CALL	DO_ANIM		LD	A,(ANIM_ENDED)		AND	A		RET	Z		JP	DO_CLRHIT*****************************************	     CLEAR OUT HITS****************************************DO_CLRHIT	STX	KEYPTR_H,0		;CLEAR OUT SEQUENCE SEARCH		LD	HL,SPRHIT0		LD	A,(SPRNUM)		AND	A		JP	Z,@CLR		LD	HL,SPRHIT1@CLR		LD	(HL),0		JP	DO_STANCE