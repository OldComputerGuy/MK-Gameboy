**********************************************************************************		         MORTAL KOMBAT MAIN GAME*		      ROUNDS,MATCHES STRUCTURE STUFF*********************************************************************************PADOUT		MACRO		DB	\1,0		ENDM*****************************************     ONE OR TWO PLAYER GAME ENTRY****************************************STARTGAME	LD	A,(CONNECT)		CP	1		JP	Z,TWO_PLAYER_GAME		LD	A,(GOROFLAG)		AND	A		CALL	NZ,GORO_LIVES		JP	ONE_PLAYER_GAME*****************************************               GAME OVER****************************************GAME_OVER	LD	A,1		LD	(DONT_FIGHT),A		;LD	A,(PLAYERS)   		;06/06/93 SKIP GAME OVER IN 2P		;CP	2		;JP	Z,@SKIPGO		LD	A,3			;PLAY GAME OVER		CALL	PLAY_MUSIC		LD	A,TXT_GAMEOVER		LD	(TEXTFLAG),A		LD	BC,20		CALL	DO_MAIN_BC		XOR	A		LD	(TEXTFLAG),A@SKIPGO		CALL	FADE_OUT		LD	A,1		SETBANK		CALL	TRY_HIGHSCORE		LD	SP,STACK		JP	SHOW_CONTINUE*****************************************		INIT GAME****************************************GAME_INIT	CALL	CLS		CALL	CLR_GAME_VARS		CALL	SET_BACKGROUND		CALL	CLRSPR			;CLEAR SPRITE DATA		CALL	SETUPPANEL		;SETTOPSCR		CALL	CLR_COLTAB		CALL	SETPLAY1		CALL	SETPLAY2		CALL	PLAYFIRE1		CALL	PLAYFIRE2		LD	DE,136		CALL	SETXPOS		LD	A,27		LD	(CENTERX),A		LD	A,#FF		LD	(SHAKEPOS),A		LD	A,255-STARTSPR		;SET END OF LIST MARKER		LD	(SPARECHRS),A		XOR	A		LD	(HARDSPR),A		LD	A,STARTSPR		LD	(NEXTSPR),A		LD	A,99		LD	(GAMETIME),A		CALL	SET_GAME_TEXT		RET***************************************** SET THE BACKGROUND FOR THIS POSITION ****************************************BACKTAB		DB	0,1,2,0,1,2,0,1,2,0,1,2,0,1,2SET_BACKGROUND	LD	A,(MAP_POSITION)		LD	C,A		LD	B,0		LD	HL,BACKTAB		ADD	HL,BC		LD	A,(HL)				CP	1		JP	Z,@BAK2		CP	2		JP	Z,@BAK3@BAK1		LD	HL,CHR1		LD	A,#02		CALL	DECOMP_CHR		LD	HL,MAP1		LD	A,#02		CALL	DECOMP_MAP     		RET@BAK2		LD	HL,CHR2		LD	A,#02		CALL	DECOMP_CHR		LD	HL,MAP2		LD	A,#02		CALL	DECOMP_MAP     		RET@BAK3		LD	HL,CHR3		LD	A,#02		CALL	DECOMP_CHR		LD	HL,MAP3		LD	A,#02		CALL	DECOMP_MAP     		RET*****************************************	    RUN GAME MUSIC****************************************GAME_MUSIC	LD	A,(MAP_POSITION)		AND	1		JP	NZ,@SECOND		LD	A,7			;PLAY MAIN TUNE		CALL	PLAY_MUSIC		RET@SECOND		LD	A,8			;PLAY MAIN TUNE		CALL	PLAY_MUSIC		RET*****************************************	     CLEAR GAME VARS****************************************CLR_GAME_VARS	XOR	A		LD	(TIME),A		LD	(KEYS),A		LD	(ICEBACKTIME),A		LD	(TRIGGER),A		LD	(NEWKEYS),A		LD	(NEWTRIG),A		LD	(QKEYS),A		LD	(QRELKEYS),A		LD	(TIME),A		LD	(ANIM_ENDED),A		LD	(ANIM_HIT),A		LD	(PRIORITY),A		LD	(COLLISIONS),A		LD	(SPRX0),A		LD	(SPRX1),A		LD	(SPRX2),A		LD	(SPRX3),A		LD	(SPRHIT0),A		LD	(WHOHIT0),A		LD	(SPRHIT1),A		LD	(WHOHIT1),A		LD	(WHO_HIT_ME),A		LD	(HITPOWER),A		LD	(SPRENERGY0),A		LD	(SPRENERGY1),A		LD	(ENERGY0),A		LD	(ENERGY1),A		LD	(EMPTIME),A		LD	(NOBEWARE),A		LD	(TEXTFLAG),A		LD	(FLAWROUND),A		LD	(ROPEFLAG),A		LD	(I_STUMBLE),A		RET*****************************************        RUN MAIN LOOP BC TIMES****************************************DO_MAIN_BC	CALL	MAINLOOP		DEC	BC		LD	A,B		OR	C		JP	NZ,DO_MAIN_BC		RET*****************************************              MAIN LOOP****************************************MAINLOOP	PUSH	BC	 	CALL	SHAKESCR		CALL	SHAKESCR		CALL	SET_VARS		;SET UP POINTERS FOR STRIPS		CALL	SET_TEXT		;SET ON SCREEN TEXT		CALL	CLR_OBJECTS		CALL	BUFFER_KEYS		CALL	PROCESS_KEYS		CALL	HANDLE_LINK		;GET_IO		CALL	ALLTEXT			;PRINT ALL TEXT		CALL	PRINT_ROPE			;PRINT ALL TEXT		CALL	ALLSPRS			;PRINT ALL SPRITES		CALL	EXTRASPRS			CALL	PRINT_SCORE		XOR	A			;PUT 0 AT END ON STRIP LIST		CALL	PUT_UNDERDATA		CALL	END_TEXT		;PUT END TEXT MARKER		CALL	MOVESLIDES		CALL	DEC_TIME		CALL	RANDOM		CALL	SET_DMA_TRANS		;TRANFER SPRITE DATA		CALL	WAIT_FLY		CALL	PRSCR		CALL	DEL_STRIPS		;REMOVE STRIP LIST FROM		CALL	DEL_TEXT		;REMOVE STRIP LIST FROM		CALL	ALLSEQS			;DO ALL SEQUENCES		CALL	ALLCOLS		CALL	CALCSCROLL		CALL	SETCENTER		;SET SCROLL CENTER		CALL	DODOWN		LD	HL,TIME		INC	(HL)		POP	BC		RET*****************************************	   RUN A DEMO GAME****************************************DEMO_FIGHT	LD	A,(SEED)		LD	(LASTSEED),A		CALL	GET_RND_PLAY		LD	(BASE0),A		CALL	GET_RND_PLAY		LD	(BASE1),A		CALL	RANDOM		;SELECT DIFF BETWEEN 3 AND 6		AND	3		ADD	A,3		LD	(DIFF),A		CALL	RANDOM		;SET BACKGROUND		AND	3		LD	(MAP_POSITION),A		CALL	INIT_GAME_SCR		LD	A,7			;PLAY MAIN TUNE		CALL	PLAY_MUSIC		XOR	A			;CLEAR		LD	(STUMBLE_FLAG),A	;NO FALL		LD	(FINISH_HIM),A		;NO FINISHING MOVE		LD	(DONT_FIGHT),A		LD	(VICTORY_FLAG),A		LD	(CLOCK_OFF),A		LD	A,99		LD	(GAMETIME),A		LD	A,1		LD	(DEMOFLAG),A		CALL	GAME_INIT		CALL	MAINLOOP		CALL	FADE_IN		LD	B,80@LOOP		CALL	MAINLOOP		CALL	DEMOSTART		DJNZ	@LOOP		LD	A,1		SETBANK		CALL	FADE_OUT		CALL	SPR_CLEAR		CALL	INIT_INTRO_SCR		CALL	SET_CHR_BOX		RETDEMOSTART	LD	A,(INKEYS)		;@@ ARH PATCH 11/06/93		AND	A		JP	NZ,@START		LD	A,(KEYS)		AND	A			;;BIT	3,A		RET	Z@START		LD	A,1		SETBANK		CALL	FADE_OUT		CALL	SPR_CLEAR		CALL	INIT_INTRO_SCR		CALL	SET_CHR_BOX		LD	SP,STACK		JP	STARTGAME*****************************************      CHOOSE A PLAYER RANDOMLY****************************************GET_RND_PLAY	CALL	RANDOM		AND	7		CP	6		JP	NC,GET_RND_PLAY		INC	A		RET*****************************************       INITIALISE GAME SCREEN****************************************INIT_GAME_SCR		;LD	A,%00011011		;LDZ	(BGP),A		;LD	A,%11011000		;LD	A,%00011011		;LDZ	(OBP0),A		;LDZ	(OBP1),A		LD	A,#00		LDZ	(SCX),A		LD	A,#00		LDZ	(SCY),A		LD	A,%10101011;			   ||||||||_________ BG        ON(1)/OFF;			   |||||||__________ SPR       ON(1)/OFF;			   ||||||___________ OBJ      8X8(0)/8X16;			   |||||____________ BG MAP  9800(0)/9C00;			   ||||_____________ BG CHR  8800(0)/8000;			   |||______________ WIN       ON(1)/OFF;			   ||_______________ WIN MAP 9800(0)/9C00;			   |________________ CONTROL   ON(1)/OFF;		LDZ	(LCDC),A		LD	A,8		LDZ	(WY),A		XOR	A		LDZ	(WX),A		LD	A,%00001111		LD	(OBJFLAGS),A		RET*****************************************		LCD ON/OFF****************************************LCD_ON		LDZ	A,(LCDC)		SET	7,A		LDZ	(LCDC),A		RETLCD_OFF		LDZ	A,(LCDC)		RES	7,A		LDZ	(LCDC),A		RETPAL_ON		LD	A,%00011011		LDZ	(BGP),A		LDZ	(OBP0),A		LDZ	(OBP1),A		RETPAL_OFF		LD	A,#FF		LDZ	(BGP),A		LDZ	(OBP0),A		LDZ	(OBP1),A		RETSPR_CLEAR	CALL	CLR_OBJECTS		JP	SET_DMA_TRANS		CALL	WAIT_FLY		RET*****************************************       INITIALISE FOR SCREENS****************************************INIT_INTRO_SCR		LD	A,#00		LDZ	(SCX),A		LD	A,#00		LDZ	(SCY),A		LD	A,%10010011;			   ||||||||_________ BG        ON(1)/OFF;			   |||||||__________ SPR       ON(1)/OFF;			   ||||||___________ OBJ      8X8(0)/8X16;			   |||||____________ BG MAP  9800(0)/9C00;			   ||||_____________ BG CHR  8800(0)/8000;			   |||______________ WIN       ON(1)/OFF;			   ||_______________ WIN MAP 9800(0)/9C00;			   |________________ CONTROL   ON(1)/OFF;		LDZ	(LCDC),A		LD	A,%00001111		LD	(OBJFLAGS),A			XOR	A		LDZ	(WY),A		LDZ	(WX),A		RET*****************************************               FADE IN****************************************FADE_IN_TAB	DB	%11111111		DB	%11111011		DB	%11101011		DB	%11011011		DB	%10011011		DB	%01011011		DB	%00011011		DB	#AAFADE_OUT_TAB	DB	%00011011		DB	%01011011		DB	%10011011		DB	%11011011		DB	%11101011		DB	%11111011		DB	%11111111		DB	#AAFADE_OUT	LD	HL,FADE_OUT_TAB		JP	DO_FADEFADE_IN		LD	HL,FADE_IN_TABDO_FADE		LD	B,2		;3		EI@LOOP		CALL	WAIT_FLY		DJNZ	@LOOP		LD	A,(HLI)		CP	#AA		RET	Z		LDZ	(BGP),A		LDZ	(OBP0),A		LDZ	(OBP1),A		JP	DO_FADE**********************************************************************************   			TWO PLAYER GAME ENTRY*********************************************************************************TWO_PLAYER_GAME	LD	A,2		LD	(PLAYERS),A		LD	A,6		LD	(CREDITS),A		XOR	A		LD	(WHICHSEL),A		LD	(OLD_PLAYER1),A		LD	A,1		CALL	PLAY_MUSIC		CALL	SHOW_SELECT		LD	(BASE0),A		LD	A,1		LD	(WHICHSEL),A		CALL	SHOW_SELECT		LD	(BASE1),A		CALL	RANDOM		AND	3		LD	(MAP_POSITION),A		JP	TWO_PLAY_ENTRY**********************************************************************************   			ONE PLAYER GAME CONTINUE*********************************************************************************CONT_GAME	LD	A,1		LD	(PLAYERS),A		XOR	A		LD	(WHICHSEL),A		LD	A,1		CALL	PLAY_MUSIC		LD	A,1		SETBANK		CALL	SHOW_SELECT		LD	(BASE0),A		LD	C,A		LD	A,1		SETBANK		LD	A,(OLD_PLAYER1)		;DON'T REMAKE BATTLE PLAN		CP	C			;IF OLD PLAYER IS SAME		CALL	NZ,MAKE_BATTLE_PLAN	;MAKE A BATTLE PLAN		LD	A,(BASE0)      		;ARH 21/06/93		LD	(OLD_PLAYER1),A		JP	TWO_PLAY_ENTRY**********************************************************************************   			ONE PLAYER GAME LOOP !!!!*********************************************************************************ONE_PLAYER_GAME		LD	A,1		LD	(PLAYERS),A		XOR	A		LD	(WHICHSEL),A		LD	A,1		CALL	PLAY_MUSIC		LD	A,_GORO		LD	(BASE0),A		LD	(OLD_PLAYER1),A		LD	A,(GOROFLAG)		AND	A		JP	NZ,@GORO		LD	A,1		SETBANK		CALL	SHOW_SELECT		LD	(BASE0),A		LD	(OLD_PLAYER1),A@GORO		LD	A,1		SETBANK		CALL	MAKE_BATTLE_PLAN	;MAKE A BATTLE PLAN		CALL	SET_BATTLE_POS		XOR	A		LD	(MAP_POSITION),ATWO_PLAY_ENTRY			CALL	CLEAR_SCORES		;CLEAR OUT SCORES		XOR	A	    		;THIS IS NOT A DEMO		LD	(DEMOFLAG),A		XOR	A			;PLAYER 1 WINS IN A ROW		LD	(WINS_IN_ROW),A;----------------------------------------;	       MATCH LOOP;----------------------------------------	MATCH_LOOP	LD	A,1		SETBANK		LD	A,(PLAYERS)		CP	1		CALL	Z,SHOW_BATTLE_PLAN		XOR	A		LD	(WINS0),A		;CLEAR WINS		LD	(WINS1),A		LD	(FINISH_HIM),A		LD	(ROUND_NUM),A		;CLEAR ROUND AND WINS		LD	(FLAWLESS),A		;CLEAR AMOUNT OF FLAWLESSES		LD	(FATALITY),A		;CLEAR FATAL MOVE BUFFER		LD	(FINISH_STATUS),A	;MAKE DRONES FINISH;----------------------------------------;	       ROUND LOOP;----------------------------------------	ROUND_LOOP	LD	HL,ROUND_NUM		;NEXT ROUND		INC	(HL)		CALL	GET_DRONE		;GET 1ST OPPONENT		CALL	SET_DIFF		XOR	A			;CLEAR		LD	(STUMBLE_FLAG),A	;NO FALL		LD	(FINISH_HIM),A		;NO FINISHING MOVE		LD	(VICTORY_FLAG),A		LD	A,1	      		;DONT FIGHT YET		LD	(DONT_FIGHT),A		LD	(CLOCK_OFF),A		;SWITCH CLOCK OFF		CALL	INIT_GAME_SCR		;SET UP GAME SCREEN			CALL	GAME_INIT		;SET UP GAME		CALL	MAINLOOP		;DISP 1ST FRAMES		CALL	FADE_IN		CALL	GAME_MUSIC		LD	A,TXT_ROUND		;PRINT ROUND NUM		LD	(TEXTFLAG),A		LD	BC,10			;FOR 20 LOOPS		CALL	DO_MAIN_BC		LD	A,TXT_FIGHT 		;PRINT FIGHT		LD	(TEXTFLAG),A		LD	BC,10			;FOR 20 LOOPS		CALL	DO_MAIN_BC		XOR	A			;NO MORE PRINTING		LD	(TEXTFLAG),A;----------------------------------------;	    ENTRY FOR PAIRS;----------------------------------------	ONDECK_ENTRY	XOR	A			;CLEAR		LD	(STUMBLE_FLAG),A	;NO FALL		LD	(FINISH_HIM),A		;NO FINISHING MOVE		LD	(DONT_FIGHT),A		;DO FIGHT		LD	(VICTORY_FLAG),A	;DONT DO VICTORY		XOR	A	   		;CLOCK ON HERE		LD	(CLOCK_OFF),A@LOOP		CALL	MAINLOOP   		;RUN MAIN LOOP		IF	SUBMIT=0		CALL	SEL_DEAD		ENDIF		LD	A,(SPRENERGY0)		;IS PLAYER 1 GETTING WOBBLY		AND	A			;OK DANK ON IT ?		JP	Z,OUT_OF_TIME		;REM ?? JUMP IF NOT		LD	A,(SPRENERGY1)		;IS PLAYER 2 GETTING WOBBLY		AND	A			;OK DANK ON IT ?		JP	Z,OUT_OF_TIME		;REM ?? JUMP IF NOT		LD	A,(GAMETIME)		;HAVE WE RUN OUT OF TIME		AND	A		JP	NZ,@LOOP		;WELL DARN IT ?;----------------------------------------;	      OUT OF TIME;----------------------------------------;	  IM'M ON MY WAY OUT !!;----------------------------------------	 OUT_OF_TIME	LD	A,1			;SWITCH CLOCK OFF		LD	(CLOCK_OFF),A		CALL	OUTOFTIME		CALL	GET_BARS		; GET BAR VALS		LD	A,B			; IS SOMEONE PLAYING SILLY		ADD	A,C			; BUGGERS !		CP	FULL_STRENGTH*2		JP	Z,GAME_OVER		; YEP ! THEN GAME OVER			LD	A,(ROUND_NUM)		; ONLY ALLOW 2 TIES		CP	5		JP	Z,GAME_OVER		CALL	GET_BARS		; GET BAR VALS		LD	A,B			; HAS A TIE OCCURED		CP	C		JP	Z,@TIE_ROUND		CALL	CALC_WINS		CALL	FINISH			; FINISH HIM CHECK		CALL	HAS_HUMAN_WON		; IF THE HUMAN LOST THEN		JP	NC,@DRONE_WON		; DON'T GET NEXT ONDECK		LD	A,(ONDECK)		;IS THIS A PAIR MATCH		AND	A		JP	NZ,GET_ONDECK@TIE_ROUND@DRONE_WON	CALL	VICTORY		CALL	BONUS_COUNT		; PRINT "WINNER IS" MSG		LD	A,(WINS1)  		; HAS DRONE WON ?		CP	2		JP	NC,GAME_OVER		; JUMP IF YES		LD	A,(WINS0)		; HAS PLAYER WON ?		CP	2		JP	NZ,ANOTHER_ROUND	; NOT ENOUGH TO WIN THE MATCH		LD	HL,WINS_IN_ROW		; MATCH WINS IN A ROW		INC	(HL)			; WINNER = ONE MORE "WIN IN A ROW"				XOR	A		LD	(FLAWLESS),A		;CLEAR FLAGS		LD	(FATALITY),A		LD	A,(PLAYERS)		CP	2		JP	Z,GAME_OVER		CALL	NEXT_DRONE_OPPONENT		JP	C,END_OF_GAME_REACHED	; CARRY SET ---> GAME FINISHED		CALL	FADE_OUT		JP	MATCH_LOOPANOTHER_ROUND	CALL	FADE_OUT		JP	ROUND_LOOP*****************************************      RUN A PAIRS SECOND PLAYER****************************************GET_ONDECK	CALL	TAKE_BACK_WIN		LD	A,1		LD	(DONT_FIGHT),A		LD	BC,2		CALL	DO_MAIN_BC		LD	A,FULL_STRENGTH		LD	(SPRENERGY1),A		CALL	PAIRPLAY	 	LD	A,(ONDECK)		LD	(BASE1),A		CALL	UPDATEPANEL		LD	A,99		LD	(GAMETIME),A		LD	BC,8	  		;7/6 ARH		CALL	DO_MAIN_BC		JP	ONDECK_ENTRYSETNEWGUY	LD	A,(ONDECK)		STX	SBASE,A		XOR	A		LD	(ONDECK),A		RET*****************************************	   TEST FOR LAST ROUND****************************************TESTLASTROUND	LD	A,(WINS1)  		; HAS DRONE WON ?		CP	2		JP	NC,@SETCY		LD	A,(WINS0)		; HAS PLAYER WON ?		CP	2		JP	Z,@SETCY		OR	A		RET@SETCY		SCF		RET*****************************************	 SOMEONE IS STUMBLING* 	      FINISH HIM !!										     *****************************************FINISH		LD	A,(GAMETIME)		;IF NO TIME DON'T FINISH		AND	A		RET	Z		CALL	WHO_HAS_WON		;IF GORO OR EMP HAS WON THEN		LD	A,B			;GET WINNER		CP	_GORO			;IF GORO WON THEN NO FINISH		JP	Z,FALLOVER		CP	_EMP			;IF EMP WON THEN NO FINISH		JP	Z,FALLOVER		LD	A,C  			;IF GORO HAS LOST		CP	_GORO		JP	Z,GORO_BEAT		;LET GORO FALL, NO FINISH		CP	_EMP	  		;IF EMP HAS LOST		JP	Z,EMP_BEAT		;LET EMP FALL, NO FINISH					CALL	WHO_HAS_WON		;IF DRONE HAS WON		CP	2			;FINISH HIM		JP	Z,@DRONE_FIN		;DON'T DO ONDECK		LD	A,(ONDECK)		AND	A		JP	NZ,ONDECK_FINISH@DRONE_FIN	CALL	TESTLASTROUND		JP	C,MAIN_FINISH		JP	FALLOVER		;FIX ARL 29/5*****************************************	MAIN FINISH FOR PLAYERS****************************************MAIN_FINISH	CALL	STEADY_SCROLL		XOR	A			; SWITCH OF STUMBLE		LD	(STUMBLE_FLAG),A		LD	(FATAL_START),A		LD	(HITFLAG),A		LD	(DONT_FIGHT),A		;FIGHT !		LD	A,1	     		; SAY STUMBLE 		LD	(I_STUMBLE),A		LD	(FINISH_HIM),A		LD	A,TXT_FINISH		; PRINT FINISH HIM		LD	(TEXTFLAG),A		LD	BC,50			;FLOP TIME OUT@LOOP		CALL	MAINLOOP		;DO MAIN LOOP       		LD	A,(HITFLAG)		;HAS HE HIT HIM		AND	A		JP	NZ,MAKE_LAST_HIT	;IF HE HAS MAKE HIM FLOP       		LD	A,(FATAL_START)		;HAS HE HIT HIM		AND	A		JP	NZ,MAKE_LAST_HIT	;IF HE HAS MAKE HIM FLOP		DEC	BC			;KEEP STUMBLING		LD	A,B			;TILL I DROP		OR	C		JP	NZ,@LOOP		JP	FALLOVER*****************************************	    DELIEVER LAST HIT****************************************		MAKE_LAST_HIT	XOR	A		LD	(I_STUMBLE),A		LD	A,(FATAL_START)		AND	A		JP	Z,@NOFATAL		LD	BC,20			;IF FATAL GIVE 10 EXTRA TICKS		CALL	DO_MAIN_BC	@NOFATAL	LD	A,1	       		;MAKE HIM FLOP		LD	(STUMBLE_FLAG),A		LD	(DONT_FIGHT),A		;NO MORE FIGHTING		XOR	A			;NO MORE PRINTING		LD	(TEXTFLAG),A		LD	BC,30		CALL	DO_MAIN_BC		RET*****************************************	   MAKE PLAYER FALLOVER****************************************FALLOVER		XOR	A		LD	(I_STUMBLE),A		LD	A,1	       		;MAKE HIM FLOP		LD	(STUMBLE_FLAG),A		LD	(DONT_FIGHT),A		;NO MORE FIGHTING		XOR	A			;NO MORE PRINTING		LD	(TEXTFLAG),A		LD	(FINISH_HIM),A		LD	BC,10		CALL	DO_MAIN_BC		RET*****************************************	  FINISH ONDECK PLAYERS****************************************ONDECK_FINISH	LD	A,1	       		;MAKE HIM FLOP		LD	(STUMBLE_FLAG),A		XOR	A			;NO MORE PRINTING		LD	(TEXTFLAG),A		LD	BC,10		CALL	DO_MAIN_BC		RET*****************************************	     GORO OR EMP BEAT****************************************EMP_BEAT	LDBA	SBASE,1			;GET PLAYER 1'S SBASE		CP	_EMP	   		;IF EMP MORPHED		JP	NZ,FALLOVER		;MAKE PLAYER FALL OVERGORO_BEAT	LD	A,1					LD	(DONT_FIGHT),A		;NO MORE FIGHTING		XOR	A			;NO MORE PRINTING		LD	(TEXTFLAG),A		LD	BC,10		CALL	DO_MAIN_BC		RET*****************************************      WAIT FOR SCROLL TO STEADY****************************************STEADY_SCROLL	LD	A,(CENTERX)		LD	B,A		CALL	MAINLOOP		LD	A,(CENTERX)		CP	B		JP	NZ,STEADY_SCROLL		CALL	MAINLOOP		LD	A,(CENTERX)		CP	B		JP	NZ,STEADY_SCROLL		CALL	MAINLOOP		LD	A,(CENTERX)		CP	B		JP	NZ,STEADY_SCROLL		RET			*****************************************	   PRINT OUT OF TIME****************************************OUTOFTIME	LD	A,(GAMETIME)		;ARH 7/6		AND	A		RET	NZ		LD	A,TXT_TIMEOUT		LD	(TEXTFLAG),A		LD	A,1		LD	(DONT_FIGHT),A		LD	BC,10		CALL	DO_MAIN_BC		XOR	A		LD	(TEXTFLAG),A		RET*****************************************   MAKE A PLAYER DISPLAY HIS VICTORY****************************************VICTORY		LD	A,1		LD	(DONT_FIGHT),A		;NO MORE FIGHTING  		LD	BC,10		CALL	DO_MAIN_BC		CALL	GET_BARS		; GET BAR VALS		LD	A,B			; HAS A TIE OCCURED		CP	C		JP	Z,@TIE  		CALL	WHO_HAS_WON		LD	(VICTORY_FLAG),A		LD	A,TXT_WINS		;PRINT WINNER		LD	(TEXTFLAG),A		LD	BC,20		CALL	DO_MAIN_BC		XOR	A			;NO MORE PRINTING		LD	(TEXTFLAG),A		XOR	A		LD	(VICTORY_FLAG),A		RET@TIE		LD	A,TXT_TIE		;PRINT WINNER		LD	(TEXTFLAG),A		LD	BC,20		CALL	DO_MAIN_BC		XOR	A			;NO MORE PRINTING		LD	(TEXTFLAG),A		XOR	A		LD	(VICTORY_FLAG),A		RET*****************************************	  ADD UP ROUND WINS****************************************CALC_WINS	CALL	HAS_HUMAN_WON	 	JP	C,@HUMWON		LD	HL,WINS1		INC	(HL)		RET@HUMWON		LD	HL,WINS0		INC	(HL)		RET*****************************************	  TAKE BACK LAST WIN****************************************TAKE_BACK_WIN	CALL	HAS_HUMAN_WON	 	JP	C,@HUMWON		LD	HL,WINS1		DEC	(HL)		RET@HUMWON		LD	HL,WINS0		DEC	(HL)		RET*****************************************	 END OF GAME REACHED****************************************END_OF_GAME_REACHED		LD	A,2			;PLAY MUSIC & GAME CREDITS		CALL	PLAY_MUSIC		LD	A,1		LD	(DONT_FIGHT),A		LD	A,TXT_OUTSTAND		LD	(TEXTFLAG),A		LD	BC,50		CALL	DO_MAIN_BC		CALL	FADE_OUT		LD	A,1		SETBANK		CALL	GAME_CREDITS		XOR	A		LD	(GOROFLAG),A		CALL	GETKEYS		LD	A,(KEYS)		CP	%01100101		JP	NZ,@NOCHEAT		LD	A,1		LD	(GOROFLAG),A@NOCHEAT	XOR	A		LD	(TEXTFLAG),A		LD	A,1		SETBANK		LD	SP,STACK		JP	SHOW_ENDGAME*****************************************	      BONUS COUNT****************************************BONUS_COUNT	XOR	A		LD	(FLAWROUND),A		CALL	GET_BARS		; GET BAR VALS		LD	A,B			; HAS A TIE OCCURED		CP	C		RET	Z			; RET IF A TIE		CALL	WHO_HAS_WON		CP	1  			;IF PLAYER 1 OK		JP	Z,@OK						;MUST BE PLAYER 2		LD	A,(PLAYERS)		;IF COMPUTER HAS WON		CP	1			;DON'T FO COUNT		RET	Z@OK		LD	A,FULL_STRENGTH		CP	E		JP	NZ,@NOFLAW		LD	HL,FLAWLESS		INC	(HL)		LD	A,1		LD	(FLAWROUND),A@NOFLAW		LD	A,1			;NO FIGHTING		LD	(DONT_FIGHT),A		CALL	DO_BONUS		XOR	A		LD	(TEXTFLAG),A		RET*****************************************	    PRINT BONUS STUFF****************************************DO_BONUS	LD	A,(GAMETIME)		AND	A		JP	Z,@NOTIME		LD	A,TXT_TIME		LD	(TEXTFLAG),A		LD	B,SC_1000		LD	A,(GAMETIME)		LD	C,A		CALL	MUL_A_SCORE		LD	BC,8		CALL	DO_MAIN_BC@NOTIME		LD	A,(FLAWROUND)		AND	A		JP	NZ,@NOSTREN		LD	A,TXT_STREN		LD	(TEXTFLAG),A		CALL	WHO_HAS_WON			LD	B,SC_1000		LD	C,E		CALL	MUL_A_SCORE		LD	BC,8		CALL	DO_MAIN_BC		JP	@NODF@NOSTREN	LD	A,(FLAWROUND)		AND	A		JP	Z,@NODF		LD	A,(FLAWLESS)		CP	1		JP	NZ,@NOFL		LD	A,TXT_FLAW		LD	(TEXTFLAG),A		LD	A,5		;FLAWLESS JINGLE		CALL	PLAY_MUSIC		LD	B,SC_200000		LD	C,1		CALL	MUL_A_SCORE		LD	BC,12		CALL	DO_MAIN_BC		JP	@NODF@NOFL		LD	A,(FLAWLESS)		CP	2		JP	NZ,@NODF		LD	A,5		;FLAWLESS JINGLE		CALL	PLAY_MUSIC		LD	A,TXT_DFLAW		LD	(TEXTFLAG),A		LD	B,SC_500000		LD	C,1		CALL	MUL_A_SCORE		LD	BC,12		CALL	DO_MAIN_BC@NODF		LD	A,(FATALITY)	;NO FATALITY		AND	A		RET	Z		LD	A,6		;FATAL JINGLE		CALL	PLAY_MUSIC		LD	A,TXT_FATAL		LD	(TEXTFLAG),A		LD	B,SC_100000		LD	C,1		CALL	MUL_A_SCORE			LD	BC,12		CALL	DO_MAIN_BC		RET*****************************************	 GET SCORE BAR VALUES*	 ~~~~~~~~~~~~~~~~~~~~*	    B = PLAYER 1*	    C = PLAYER 2****************************************GET_BARS	LD	A,(SPRENERGY0)			LD	B,A		LD	A,(SPRENERGY1)		LD	C,A		RET*****************************************	     HAS HUMAN WON*	     ~~~~~~~~~~~~~*	    CYSET ===> YES****************************************HAS_HUMAN_WON	CALL	GET_BARS		LD	A,C		SUB	B		RET		*****************************************	      WHO HAS WON*	      ~~~~~~~~~~~*	  B = WINNER'S NUMBER*	  C = LOSER'S NUMBER****************************************WHO_HAS_WON	CALL	HAS_HUMAN_WON		JP	NC,@PLAY_0_LOST		LD	A,(SPRENERGY0)		LD	E,A		LD	A,(BASE0)		;PLAYER 0 HAS WON		LD	B,A		LD	A,(BASE1)		LD	C,A		LD	A,1			;SAY PLAYER 1		RET@PLAY_0_LOST	LD	A,(SPRENERGY1)		LD	E,A		LD	A,(BASE1)		;PLAYER 1 HAS WON		LD	B,A		LD	A,(BASE0)		LD	C,A		LD	A,2			;SAY PLAYER 2		RET*****************************************	   GET DRONE OPPONENT****************************************GET_DRONE	XOR	A		LD	(ONDECK),A		 		LD	A,(PLAYERS)		CP	2		RET	Z			LD	A,(MAP_POSITION)	;GET MAP POSITION		LD	C,A		LD	B,0		LD	HL,ENEMY_TAB		;FROM ENEMY TABLE		ADD	HL,BC		LD	E,(HL)		LD	A,E			;GET FIRST OPPONENT		AND	#0F		LD	(BASE1),A		;IN SBASE1		LD	A,E			;PUT PAIR SECOND PLAYER				AND	#F0			;IN ONDECK		RET	Z		SWAP	A	 		;IF PLAYER IS ONDECK		LD	E,A			;GET THEM IN CORRECT ORDER		LD	A,(BASE1)		LD	(ONDECK),A		LD	A,E		LD	(BASE1),A		RET*****************************************          NEXT_DRONE_OPPONENT*    Determine who is the next drone*   opponent based on the player up's* 	     MAP position* 											     **Carry set ---> end of game was reached*Carry clr ---> end of game sans reached****************************************NEXT_DRONE_OPPONENT		LD	HL,MAP_POSITION		INC	(HL)		LD	A,(HL)		LD	C,A		LD	B,0		LD	HL,ENEMY_TAB		;FROM ENEMY TABLE		ADD	HL,BC		LD	A,(HL)		CP	#FF		JP	Z,@GAMEOVER				OR	A		RET@GAMEOVER	SCF		RET*****************************************	    SET DIFFICULTY****************************************SET_DIFF	LD	A,9		LD	(DIFF),A		LD	A,(GOROFLAG)		AND	A		RET	NZ		LD	A,2		LD	(DIFF),A				LD	A,(CHEAT)		AND	A		RET	NZ		LD	A,(MAP_POSITION)		CP	10		JP	Z,@SHANG		LD	C,0		;EASY		LD	A,(WINS_IN_ROW)		CP	3		;2 OR LESS		JP	C,@SET		LD	C,2		;MEDIUM		CP	5		;4 OR LESS		JP	C,@SET		LD	C,3		;YOUR IN TROUBLE PAL !!!@SET		LD	A,(MAP_POSITION)		SRL	A		ADD	A,C				CP	10		;9 OR LESS OK		JP	C,@OK9		LD	A,9@OK9		LD	(DIFF),A		RET@SHANG		LD	A,9		LD	(DIFF),A		RET*****************************************       IS_FINISH_HIM_ALLOWED**	    Cyset = yes*           clear = no****************************************IS_FINISH_HIM_ALLOWED		LD	A,(BASE1)		CP	_GORO		JP	Z,@FHIMNO		CP	_EMP		JP	Z,@FHIMNO		SCF		RET@FHIMNO		OR	A		RET*****************************************     IS_EDD_BOONS_STRUCTURE_BAD** totaly useless routine that works out*  if edd boon can write a game without*	    a bad structure.**	     CYSET  = YES*            CLEAR  = YES****************************************IEBSB		SCF		RET*****************************************	      MUL A SCORE*	      ADD SC_B * C****************************************MUL_A_SCORE	LD	A,1		SETBANK		PUSH	BC		CALL	WHO_HAS_WON		LD	DE,PLAY_1_SCORE		CP	1		JP	Z,@ARRG		LD	DE,PLAY_2_SCORE@ARRG		POP	BC@LOOP		PUSH	BC		PUSH	DE		LD	A,B		CALL	SCORE_A		POP	DE		POP	BC		DEC	C		JP	NZ,@LOOP		RET*****************************************        PRINT LEGAL SPREEN****************************************GAME_CREDITS	CALL	INIT_INTRO_SCR		CALL	CLS		CALL	SET_CHR_BOX		CALL	PRINTF  ;01234567890123456789		DB	AT,06,1," YOU HAVE DEFEATED"		DB	AT,07,1,"    SHANG TSUNG"		DB	AT,09,1,"YOU ARE THE SUPREME"		DB	AT,10,1,"   MORTAL KOMBAT"		DB	AT,11,1,"      WARRIOR"		DB	STOP		CALL	FADE_IN		LD	BC,500		CALL	NO_LINK_WAIT		CALL	FADE_OUT		LD	A,1		SETBANK		CALL	SHOW_CREDITS		RET****************************************		IF	SUBMIT=0SEL_DEAD	LD	A,(KEYS)		BIT	2,A		RET	Z		XOR	A		LD	(SPRENERGY0),A		RET		ENDIF