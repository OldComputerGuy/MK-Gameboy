********************************************************************************* 		    MORTAL KOMBAT PLAYER INTELLEGENCE********************************************************************************SAFEDIST	EQU	10*****************************************       MACRO FOR DIFFICULTY TABLE*        CONVERTS RANGES OF 0-999*		TO 0-255*     WITH THE EQUATION X*32/125 SO,*	 999 = 255 AND 500 = 128 ****************************************DIFFS		MACRO				;		DB	(\1*32)/125		DB	(\2*32)/125		DB	(\3*32)/125		DB	(\4*32)/125		DB	(\5*32)/125		DB	(\6*32)/125		DB	(\7*32)/125		DB	(\8*32)/125		DB	(\9*32)/125		DB	(\10*32)/125		ENDM*****************************************	    HAS GAME FINISHED****************************************HAS_GAME_FINISHED		LD	A,(DONT_FIGHT)		AND	A		RET	Z		POP	DE		JP	DO_STANCE*****************************************		EQUATES****************************************DRONE_ENTRY	LD	A,SEQ_STANCE		CALL	SET_ANI		MOVE	DO_STANCE		RET*****************************************       MAIN ENTRY FOR ANY DRONE****************************************DRONE_START	XOR	A	    		;BE ALERT		LD	(NOBEWARE),A		CALL	FACE_HIM		CALL	DO_PROCS		;CALL ANIMATION DRIVERDRONE_DECISION	CALL	MORPH_PROC		;DO MORPH PROCESSING		LDX	A,SBASE		CP	_GORO		JP	Z,GORO_DECISION		CP	_EMP		JP	Z,EMP_DECISION		LD	HL,ASK_STAND_STILL	;SHOULD DRONE STAND STILL		CALL	ASK_MR_DIFF		JP	C,STAND_STILL		;NO THEN JUMPDRONE_RET2	CALL	PREV_DUCK_ABUSE		CALL	SHOULD_DRONE_SUPER		JP	C,DRONE_SUPER_MOVEDRONE_RET4	CALL	SHOULD_DRONE_ZAP		JP	C,DRONE_ZAP		JP	STALK_HIMSTALK_RETURN	CALL	GET_HIS_DATA	  	;IS HE A SITTING DUCK		BIT	_FLOPBIT,A		;IF HE'S FLOPPED BACKOFF		JP	NZ,STAND_STILL			BIT	_SDBIT,A		JP	NZ,DRONE_NAIL_SD		CALL	IS_HE_AIRBORN		JP	NC,GROUNDED*****************************************           AIRBORN STUFF HERE****************************************		LD	HL,ASK_FLYKP		CALL	ASK_MR_DIFF		JP	C,DRONE_PRO_ATTACK*****************************************	   OPPENENT ON GROUND****************************************DRONE_RET5GROUNDED	CALL	GET_HIS_DATA		;TEST HIS STATUS		BIT	_FLOPBIT,A		;IF HE'S FLOPPED BACKOFF		JP	NZ,STAND_STILL			CALL	PREV_DUCK_ABUSE		CALL	IS_HE_DUCKING		JP	C,ATTACK_PUSSY		LD	HL,ASK_HARD_ATTACK		CALL	ASK_MR_DIFF		JP	NC,DRONE_EASY_ATTACK;SMART ATTACKS		LD	HL,ASK_PRO_ATTACK			CALL	ASK_MR_DIFF		JP	C,DRONE_PRO_ATTACK		CALL	IS_HE_AIRBORN		JP	NC,SMART_TRY_SUPER		CALL	GET_HIS_VELS		AND	A		JP	Z,DRONE_HIPUNCH		CALL	IS_TOWARDS_ME		JP	C,DRONE_HIPUNCH			     	JP	DRONE_ENTRY******************************************  IS PLAYER TRY TO CLOSE QUARTER HIT*****************************************IS_CLOSE_DANGER	CALL	FIND_MHD		CP	7		RET	NC		CALL	GET_HIS_ACTION		CP	SEQ_PUNCHI		JP	Z,@SETCY		CP	SEQ_KICKHIGH		JP	Z,@SETCY		OR	A		RET@SETCY		SCF		RET******************************************  DRONE: ATTACK WITH AN EASY MOVE*****************************************DRONE_EASY_ATTACK		CALL	GET_HIS_DATA		;TEST HIS STATUS		BIT	_FLOPBIT,A		JP	NZ,DRONE_ENTRY		CALL	RANDOM		AND	3		JP	Z,DRONE_ROUNDHOUSE		CP	1		JP	Z,DRONE_HIKICK		CP	2		JP	Z,DRONE_SWEEP		CP	3		JP	Z,DRONE_EASY_HIPUNCH		RET******************************************	     DRONE ROUND HOUSE*****************************************DRONE_ROUNDHOUSE		JP	ROUND_HOUSE******************************************             DRONE SWEEP*****************************************DRONE_SWEEP	LD	HL,DR_SWEEP_RET		LD	A,SEQ_SWEEP		JP	DRONE_SEQ_PLAY	DR_SWEEP_RET	CALL	GET_HIS_ACTION		;A = HIS ACTION		CP	SEQ_SWEEP		JP	Z,DRONE_DUCK		LDX	A,SBASE			;IF NOT LIZ BACKOFF		CP	_LIZ		JP	NZ,DRONE_BACKOFF		LD	A,128	  		;ELSE BACKOFF HALF THE TIME		CALL	RANDPER		JP	C,DRONE_BACKOFF		JP	LIZ_SCISSOR    		;OR SCISSOR HIM******************************************          DRONE EASY HIPUNCH*****************************************DRONE_HIKICK	JP	DO_KICK******************************************          DRONE EASY HIPUNCH*****************************************DRONE_EASY_HIPUNCH		CALL	GET_HIS_DATA		;TEST HIS STATUS		BIT	_FLOPBIT,A		JP	NZ,DRONE_ENTRY		LD	HL,DRONE_BACKOFF		LD	A,2		JP	DRONE_RFP******************************************          DRONE SMART HIPUNCH*****************************************PUNCH_REPEATS	DB	2,3,4,5,7,7,7,7,7,7DRONE_HIPUNCH	CALL	GET_HIS_DATA		;TEST HIS STATUS		BIT	_FLOPBIT,A		JP	NZ,DRONE_ENTRY		LD	HL,PUNCH_REPEATS		CALL	GET_DIFF_BYTE		; A = OF REPEATS		LD	HL,DRONE_ENTRY		JP	DRONE_RFP*****************************************	      SMART MOVES****************************************SMART_TRY_SUPER	CALL	SHOULD_DRONE_SUPER		JP	C,DRONE_SUPER_MOVE			LD	HL,DRONE_ENTRY		LD	A,7		;20		JP	DRONE_RFP******************************************     PLAY DRONE SEQUENCE TILL END*	   HL = RETURN ADDRESS*****************************************DRONE_SEQ_PLAY	LD	E,A		STX	D1,L		;RETURN ROUTINE		STX	D2,H			LD	A,E		CALL	SET_ANI		CALL	ME_ON_TOP		MOVE	DSEQ1DSEQ1		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		LD	A,(ANIM_ENDED)		AND	A		RET	Z				LDX	L,D1			;RETURN		LDX	H,D2		JP	(HL)******************************************     PLAY DRONE SEQUENCE TILL END*	   D0 = AMOUNT OF FRAMES*	   HL = RETURN ADDRESS*****************************************DRONE_SEQ_PLAY_D0		LD	E,A		STX	D1,L		;RETURN ROUTINE		STX	D2,H			LD	A,E		CALL	SET_ANI		CALL	ME_ON_TOP		MOVE	DSEQ2DSEQ2		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		LDX	A,D0		DEC	A		STX	D0,A		JP	Z,@END		LD	A,(ANIM_ENDED)		AND	A		RET	Z		@END		LDX	L,D1			;RETURN		LDX	H,D2		JP	(HL)******************************************	      DRONE BACKOFF*****************************************DRONE_BACKOFF 	STX	D0,5DRONE_BACKOFF2	LD	A,SEQ_BACKOFF		CALL	SET_ANI		MOVE	BKOF1			;SLEEP HERE		BKOF1		CALL	FACE_HIM		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		CALL	DRONE_BEWARE		LDX	A,D0		DEC	A		STX	D0,A		RET	NZ		JP	DRONE_ENTRY****************************************** DRONE_RFP - Drone rapid fire punches !!			   * 						   *Input: A = max times I am allowed to hit*      HL = return address*****************************************DRONE_RFP	STX	D0,A		STX	D1,L		;RETURN ROUTINE		STX	D2,H			LD	A,SEQ_PUNCHI		CALL	SET_ANI		CALL	ME_ON_TOP		MOVE	RFP1RFP1		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		CALL	DRONE_BEWARE		CALL	FIND_MHD		;IF HE'S NOT NEAR ME 		CP	9			;FINISH PUNCHING		JP	NC,@MISS		CALL	GET_HIS_ACTION		;TEST HIS STATUS		CP	SEQ_HEADBACK		JP	NZ,@MISS		LD	A,(ANIM_ENDED)		AND	A		RET	Z				LDX	A,D0		DEC	A		STX	D0,A	    		RET	NZ		LDX	L,D1			;RETURN		LDX	H,D2		OR	A		JP	(HL)@MISS		MOVE	RFP2   			;WITHDRAW FISTRFP2		CALL	DO_PROCS		LD	A,(ANIM_ENDED)		AND	A		RET	Z				LDX	L,D1			;RETURN		LDX	H,D2		SCF		JP	(HL)*****************************************	     STALK OPPENENT****************************************DIFF_ZAP_SPACING		DB	0		DB	10*10		DB	10*9		DB	10*8		DB	10*7		DB	10*7		DB	10*6		DB	10*6		DB	10*5		DB	10*5STALK_HIM		LD	A,SEQ_STALK		CALL	SET_ANI		MOVE	STALK			;SLEEP HERE		STALK		CALL	FACE_HIM		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		CALL	DRONE_BEWARE		LD	HL,DIFF_ZAP_SPACING		CALL	GET_DIFF_BYTE		; HL = FK SPACING ALLOWED		JP	Z,NO_ZAP		LD	E,A			; ZAP TIMEOUT		LDX	A,PROJTIME		SUB	E		JP	C,NO_ZAP		; NOT TIME YET		CALL	SHOULD_DRONE_ZAP	; ALLOWED ?		JP	NC,NO_ZAP		; SANS		LD	E,10		CALL	RANDPER		JP	C,DRONE_ZAP		; RANDOM-NESSNO_ZAP		CALL	PUSH_AWAY		LD	HL,ASK_GENERIC_DEFENSE	;PREVENT DUCK ABUSE		CALL	ASK_MR_DIFF		JP	NC,@NOCHECK		CALL	FIND_MHD		CP	SAFEDIST		JP	NC,@NOCHECK	     	CALL	GET_HIS_DATA		;TEST HIS STATUS		BIT	_ATTACKBIT,A		JP	NZ,@SUSSED				CALL	IS_HE_DUCKING		JP	NC,@NOCHECK@SUSSED		CALL	CAN_DAMAGE_ME		JP	NC,DRONE_SWEEP@NOCHECK	CALL	FIND_MHD		CP	ATTACK_DIST+1		RET	NC			;KEEP ON STALKING		JP	STALK_RETURN*****************************************	      STAND STILL****************************************DIFFWAITTAB	DB	31,31,31,15,15,15,15,07,07,03,03STAND_STILL	LD	HL,DIFFWAITTAB		CALL	GET_DIFF_BYTE		LD	E,A		CALL	RANDOM			;RANDOM TIME TO STAND STILL		AND	E		INC	A			;STOP ZERO		      	STX	D0,A		LD	A,SEQ_STANCE		CALL	SET_ANI		MOVE	STAND_WAIT		RETSTAND_WAIT	CALL	FACE_HIM		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		CALL	PREV_DUCK_ABUSE		CALL	DRONE_BEWARE		;KEEP ON THE LOOKOUT FOR		   				;FUNNY STUFF	  	LDX	A,D0			;DEC NO MOVE COUNT		DEC	A		STX	D0,A		JP	Z,DRONE_RET2		CALL	GET_HIS_DATA	  	;IS HE A SITTING DUCK		BIT	_SDBIT,A		JP	NZ,DRONE_NAIL_SD		RET*****************************************          PREVENT DUCK ABUSE*	   ~~~~~~~~~~~~~~~~~~****************************************PREV_DUCK_ABUSE	CALL	IS_HE_DUCKING		RET	NC		; NOT DUCKING		CALL	FIND_MHD		CP	7		RET	NC		LD	HL,ASK_DUCK_ABUSE		CALL	ASK_MR_DIFF		RET	NC		POP	HL		;UNLOAD STACK		LD	A,128		CALL	RANDPER		JP	C,ATTACK_PUSSY	;DUCK NEAR HIM		JP	DO_THROW*****************************************     SHOULD I DO A SUPER ATTACK****************************************			;SUPERMOVE TIME SPACINGSDIFF_SUPER_SPACING	DB	0,10*6,10*4,10*4,10*4,10*3,10*3,10*3,10*3,10*2			;CHARACTER MINIMUM SUPER LD DISTANCESOCHAR_SUPER_DIST	DB	#40/13			DB	#10/13			DB	#10/13			DB	#80/13	;KANG = MUST BE FURTHER AWAY			DB	#40/13			DB	#70/13			DB	#90/13			DB	#00	;SKIP FOR EMP/GORO			DB	#00SHOULD_DRONE_SUPER		CALL	GET_HIS_DATA	; TEST HIS STATUS		BIT	_FLOPBIT,A		JP	NZ,@NOSUPER		BIT	_DOWNBIT,A		JP	NZ,@NOSUPER		LD	HL,DIFF_SUPER_SPACING		CALL	GET_DIFF_BYTE	  	; HL = SPACING ALLOWED		JP	Z,@NOSUPER	  	; NO SPACING = NO SUPERMOVES		LD	E,A			;E = SUPER TIME		LDX	A,SUPERTIME		SUB	E			;IF E IS LT A THEN RET			JP	C,@NOSUPER				CALL	IS_HE_DUCKING		JP	C,@NOSUPER 		; HIS DUCKING ----> SANS SUPER LD		LD	HL,OCHAR_SUPER_DIST		CALL	GET_CHAR_BYTE		; A = MIN DISTANCE FOR SUPER ATTACK		JP	Z,@NOSUPER		; EMP/GORO ---> SKIP		LD	E,A		CALL	FIND_MHD		; A = DISTANCE BETWEEN US		SUB	E		JP	C,@NOSUPER		LD	HL,ASK_SUPER_ATTACK		JP	ASK_MR_DIFF@NOSUPER	OR	A		RET******************************************           DRONE SUPER MOVE					   *****************************************DRONE_SUPER_MOVE		LD	E,15		CALL	RANDPER		JP	NC,@NOPE		LDX	A,SBASE	  		;IF RAIDEN DO HIS TELEPORT		CP	_RAIDEN		JP	Z,RAIDENTELE@NOPE		LD	HL,CHAR_ATTACKS		CALL	GET_CHAR_WORD		JP	Z,DRONE_RET4		; ZERO ---> NO MOVE TO DO !!		STX	SUPERTIME,0		JP	(HL)CHAR_ATTACKS	DW	0		;0 = VANDAN		DW	KANOSPIN	;1 = KANO		DW	RAIDENDIVE	;2 = RAIDEN DIVE		DW	KANGKICK	;3 = KANG SUPER KICK		DW	SCORP_TELE 	;4 = SCORPION		DW	SZ_SLIDE  	;5 = SUB-ZERO		DW	SUPERLIZ  	;6 = SONYA		DW	0		;7 = GORO		DW	0		;8 = EMP*****************************************  SHOULD_DRONE_ZAP - CYSET = YES****************************************SHOULD_DRONE_ZAP		CALL	FIND_MHD		CP	12		JP	C,@NOZAP		CALL	GET_HIS_DATA	; TEST HIS STATUS		BIT	_REACTBIT,A		JP	NZ,@NOZAP			BIT	_FLOPBIT,A		JP	NZ,@NOZAP		CALL	GET_HIS_ACTION	; A = HIS ACTION		CP	SEQ_FROZEN		JP	Z,@NOZAP	; AVOID "DOUBLE ICE BACKFIRE"		CALL	IS_HE_AIRBORN		JP	C,@GROUND	; HE'S GROUNDED = OK					; MUST BE IN AIR 		CALL	IS_TOWARDS_ME		JP	C,@NOZAP	; HEADED FOR ME ---> SKIP		LDX	A,SBASE		;IF NOT SUBZERO JUMP		CP	_SUBZERO		JP	NZ,@DECCOUNT;SUBZERO CANT FREEZE AIRBORN GUYS;MUST BE SUBZERO			JP	@NOZAP** ENEMY = ON GROUND*@GROUND		CALL	IS_HE_DUCKING		JP	C,@NOZAP@DECCOUNT	LDX	A,MAXPROJ		AND	A		JP	Z,@NOZAP	; ALL FRESH OUT, OH WELL		LD	HL,ASK_PROJ		JP	ASK_MR_DIFF	; LET MR, DIFF ANSWER THAT QUESTION@NOZAP		OR	A      		RET*****************************************	       DRONE ZAP****************************************DRONE_ZAP	LDX	A,MAXPROJ		DEC	A		STX	MAXPROJ,A		STX	PROJTIME,0		JP	FIRE_IT******************************************  DRONE ATTACKING A DUDE WHO IS DUCKING			   *****************************************ATTACK_PUSSY	JP	DRONE_DUCK*********************************************************************************			INTELLEGENCE UTILITY ROUTINES**************************************************************************************************************************	     IS HE DUCKING*****************************************IS_HE_DUCKING	CALL	GET_HIS_ACTION		CP	SEQ_KICKDUCK		JP	Z,@YES		CP	SEQ_DUCK		JP	Z,@YES		CP	SEQ_DUCKBLOK		JP	Z,@YES		; DUCK ---> GO FOR CLOSE KILL !!		OR	A		RET@YES		SCF		RET******************************************	    IS HE DUCK KICKING*****************************************IS_HE_DUCK_KICKING		CALL	GET_HIS_ACTION		CP	SEQ_KICKDUCK		JP	Z,@YES		OR	A		RET@YES		SCF		RET*****************************************	       ASK MR DIFF*	       ~~~~~~~~~~~* Magical routine which asks MR DIFF*   if I can perform certain act,				   * 						   * Input: HL --> table of 10 RANDPER *		values which are used *		based on the magical*		variable called DIFF			   * 						   *  Returns: Carry set   = yes				   *           Carry clear = no				   *****************************************ASK_MR_DIFF	LD	A,(DIFF)	;GET DIFF SETTING		LD	C,A		;STUFF IN BC		LD	B,0		ADD	HL,BC		;INDEX INTO PROBABILITY TABLE		LD	E,(HL)		;IN HL		JP	RANDPER******************************************  		RANDPER*		~~~~~~~*  E = PROBABILITY OF EVENT (0-255)*  RETURNS CS IF PROBABILITY IS TRUE*****************************************RANDPER		LD	A,E		AND	A		JP	Z,@NO		CALL	RANDOM		;GET RANDOM 0-255 IN A		SUB	E		JP	NC,@NO		SCF			;YES		RET@NO		OR	A		;NO		RET******************************************	   GET HIS VELOCITIES*         SAME AS GET_HIS_XVEL*****************************************GET_HIS_VELS	LD	A,(SPRNUM)		AND	A		JP	Z,@GET1		LDBA	YSPD,0		LD	B,A		LDBA	XSPD,0		RET@GET1		LDBA	YSPD,1		LD	B,A		LDBA	XSPD,1		RET******************************************  	     IS TOWARDS ME*      CARRY SET IF STICK TOWARDS*****************************************IS_TOWARDS_ME	CALL	WHICH_SIDE		JP	NC,@LEFT				LD	A,(KEYS)		;RIGHT TEST		BIT    	BIT_KEY_LEFT,A		JP	Z,@NO		SCF		RET@NO		OR	A		RET@LEFT		LD	A,(KEYS)		;LEFT TEST		BIT    	BIT_KEY_RIGHT,A		JP	Z,@NO		SCF		RET******************************************	     IS_HE_AIRBORN*        CARRY SET IF ON GROUND*****************************************IS_HE_AIRBORN	LD	A,(SPRNUM)	     	AND	A		JP	Z,@IM0		LDBA	YCOORD,0		JP	@IM2@IM0		LDBA	YCOORD,1@IM2		CP	GROUNDLEVEL		JP	Z,@YES		OR	A		RET@YES		SCF		RET******************************************	      DRONE FINISH*****************************************DRONE_FINISH	CALL	GET_HIS_DATA		BIT	_FLOPBIT,A		JP	NZ,DO_STANCE		JP	DO_FATAL_MOVE	DRONE_NAIL_SD	CALL	FIND_MHD		CP	ATTACK_DIST+2		JP	NC,STALK_HIM		LD	A,(FINISH_HIM)		AND	A		JP	Z,@NOTYET		LD	A,(FINISH_STATUS)		AND	A		JP	NZ,@NOTYET		LD	E,25		CALL	RANDPER		JP	DO_FATAL_MOVE@NOTYET		LD	E,64		CALL	RANDPER		JP	C,ROUND_HOUSE		LD	A,SEQ_DUCK		CALL	SET_ANI		;SET UP ANI		STX	D0,5		MOVE	FIN1FIN1		CALL	DO_PROCS	;DO ALL PROCS		LDX	A,D0		;DEC WAIT TIME		DEC	A		STX	D0,A		RET	NZ		CALL	FIND_MHD		CP	7		JP	NC,DO_DUCKKICK		JP	DO_UPPERC******************************************	      DRONE DUCK*****************************************DRONE_DUCK	STX	D0,6		LD	A,SEQ_DUCK		CALL	WAIT_NONATTACKDRONE_DUCK_2	LD	A,SEQ_DUCK		CALL	SET_ANI		MOVE	DRDUK1		STX	D0,3DRDUK1		CALL	DO_PROCS		CALL	DRONE_BEWARE		CALL	HAS_GAME_FINISHED		LDX	A,D0		DEC	A		STX	D0,A		RET	NZ			CALL	FIND_MHD    		;HOW FAR IS HE ?		CP	SAFEDIST		;IS HE A THREAT		JP	NC,DRONE_ENTRY		;RETURN IF HE'S NOT		CALL	GET_HIS_DATA		;TEST HIS STATUS		BIT	_FLOPBIT,A		JP	NZ,DRONE_ENTRY		BIT	_DOWNBIT,A		JP	NZ,SWEEPTEST		BIT	_ATTACKBIT,A		JP	NZ,SWEEPTEST		CALL	FIND_MHD		CP	7		JP	NC,DRONE_DUCK_2		LD	HL,ASK_PRO_ATTACK	;ASK_DUCK_UP		CALL	ASK_MR_DIFF		JP	C,DRONE_UPPERCUT		JP	DRONE_DUCK_2		;DRONE_ENTRY	SWEEPTEST	CALL	GET_HIS_ACTION		CP	SEQ_DUCK		JP	Z,@SWEEP		CALL	FIND_MHD    		;HOW FAR IS HE ?		CP	ATTACK_DIST		;IS HE A THREAT		JP	NC,DRONE_ENTRY		;RETURN IF HE'S NOT		LD	HL,DRONE_DUCK_2		LD	A,SEQ_KICKDUCK		JP	DRONE_SEQ_PLAY@SWEEP		LDX	A,SBASE		CP	_LIZ		JP	Z,LIZ_SCISSOR		JP	DRONE_SWEEP******************************************	  DRONE DO AN UPPERCUT*****************************************DRONE_UPPERCUT	JP	DO_UPPERC******************************************	   WAIT FOR NONATTACK*	     D0 = WAIT TIME*****************************************WAIT_NONATTACK	CALL	SET_ANI		;SET UP ANI		POP	HL		;HL = RETURN ADDRESS		STX	D1,L		STX	D2,H		MOVE	WAITNONWAITNON		CALL	DO_PROCS	;DO ALL PROCS		CALL	HAS_GAME_FINISHED		LDX	A,D0		;DEC WAIT TIME		DEC	A		JP	Z,@LEAVE	;GOT TO END OF COUNT RET WIT CYSET		STX	D0,A		CALL	GET_HIS_DATA		BIT	_ATTACKBIT,A	;IS HE ATTACKING		RET	NZ		;RET AND DO ANOTHER LOOP IF HE IS		LDX	L,D1		;RET HERE AN SAY HE'S NOT ATTACKING		LDX	H,D2		OR	A		JP	(HL)@LEAVE		STX	D0,A		LDX	L,D1		;SET CY AND SAY HE'S ATTACKING		LDX	H,D2		SCF		JP	(HL)******************************************	      CAN_DAMAGE_ME*	      ~~~~~~~~~~~~~*	    CAN HE DAMAGE ME*	       CY SET IF OK*****************************************DAMMETAB	DB	4,4,3,3,3,1,0,0,0,0	CAN_DAMAGE_ME	LD	HL,DAMMETAB		CALL	GET_DIFF_BYTE				JP	Z,@NOHIT				LD	C,A		LDX	A,DAMAGE		SUB	4		JP	C,@HITME@NOHIT		OR	A		RET@HITME		SCF		RET*********************************************************************************		    DRONE RESPONSE AND BEWARE ROUTINES*************************************************************************************************************************	      DRONE BEWARE*	      ~~~~~~~~~~~~* BEWARE OF ANY ATTACKS OPPENENT MAKES****************************************DRONE_BEWARE	LD	A,(NOBEWARE)		;IF 1 THEN DONT BEWARE		AND	A		JP	Z,@BEWARE		DEC	A			;DEC TIME		LD	(NOBEWARE),A		RET@BEWARE		LDX	A,SBASE		CP	_GORO		JP	NC,@NOFIN		LD	A,(FINISH_HIM)		AND	A		JP	NZ,STALK_FIN@NOFIN		LDX	A,CURANI		;IF IM IN A SEQ		CALL	GET_SEQ_DATA		;NO COUNTER		BIT	_ATTACKBIT,B		RET	NZ		CALL	GET_HIS_DATA		AND	A		RET	Z		LD	B,A		POP	DE  			;UNSTACK & SAVE RETURN ADDRESS		LD	HL,LASTRETADD		LD	A,E		LD	(HLI),A		LD	(HL),D		BIT	_ATTACKBIT,B		JP	Z,DRONE_RETURN		CALL	GET_HIS_ACTION		CP	SEQ_WEAPON_FIRE		JP	Z,@FIRED@FIRED		CALL	THREAT			;IS THIS ATTACK IN RANGE		JP	NC,DRONE_RETURN		;JUMP IF HE'S NOT A THREAT		LD	HL,ASK_BLOCK_DEFENSE		CALL	ASK_MR_DIFF		JP	C,DO_COUNTERDRONE_RETURN	LD	HL,LASTRETADD		;GET RETURN ADDRESS		LD	A,(HLI)		LD	H,(HL)		LD	L,A		JP	(HL)******************************************          STALK FOR FINISHING*****************************************STALK_FIN	POP	DE			;UNSTACK CALL		LD	A,#FF		LD	(NOBEWARE),A		LD	A,(FINISH_STATUS)		AND	A		JP	NZ,STALK_HIM		CALL	RANDOM		IF	SUBMIT=0		JP	DRONE_FINISH				ENDIF				AND	7		JP	Z,DRONE_FINISH				JP	DRONE_FINISH		******************************************	    IM BEING ATTACKED*****************************************DO_COUNTER	LDX	A,SBASE		CP	_GORO		JP	Z,@DEF_GORO		CP	_EMP		JP	Z,@DEF_GORO		LD	A,4		LD	(NOBEWARE),A		CALL	PREV_SWEEP_ABUSE				CALL	GET_HIS_ACTION		CP	SEQ_WEAPON_FIRE		JP	NZ,@NOFIRE       		CALL	CAN_DAMAGE_ME		JP	C,DRONE_RETURN		@NOFIRE		LD	HL,ASK_PRO_DEFENSE		CALL	ASK_MR_DIFF		JP	NC,BAD_COUNTER		JP	DRONE_PRO_MOVE@DEF_GORO	LD	HL,ASK_PRO_DEFENSE		CALL	ASK_MR_DIFF		JP	NC,DRONE_HIBLOCK		RET******************************************	   PREVENT SWEEP ABUSE*****************************************PREV_SWEEP_ABUSE		CALL	FIND_MHD		CP	12		RET	NC		CALL	GET_HIS_ACTION		CP	SEQ_SWEEP		RET	NZ		CALL	CAN_DAMAGE_ME		RET	NC		POP	DE		;UNSTACK RETURN ADDRESS		LD	A,4		LD	(NOBEWARE),A			LD	A,128		CALL	RANDPER		JP	C,DRONE_SWEEP		JP	DRONE_DUCKBLOK******************************************  	   BAD COUNTER ATTACK*****************************************BAD_COUNTER	CALL	RANDOM		AND	3		JP	Z,DRONE_HIBLOCK		CP	1		JP	Z,DRONE_SWEEP		CP	2		JP	Z,DRONE_DUCK		JP	DRONE_HIBLOCK******************************************	     DRONE HIGH BLOCK*****************************************DRONE_HIBLOCK		;STX	D0,5		;#FF		;LD	HL,DO_STANCE		;DRONE_DUCK_2		;LD	A,SEQ_HIBLOCK		;JP	DRONE_SEQ_PLAY_D0		STX	D0,5		;#FF		LD	A,SEQ_HIBLOCK		CALL	WAIT_NONATTACK		LDX	A,SBASE		CP	_GORO		JP	NC,DO_STANCE		JP	DRONE_DUCK_2******************************************	   DRONE DUCK AND BLOCK*****************************************DRONE_DUCKBLOK	;STX	D0,7		;#FF		;LD	HL,DO_STANCE		;DRONE_DUCK_2		;LD	A,SEQ_DUCKBLOK		;JP	DRONE_SEQ_PLAY_D0		STX	D0,7		;#FF		LD	A,SEQ_DUCKBLOK		CALL	WAIT_NONATTACK		JP	DRONE_DUCK_2******************************************	     GET SITTING DUCK*****************************************DO_NSD		JP	DRONE_RET4******************************************	       DRONE PRO MOVE*****************************************MASKS		DB	1,2,4,8,16,32,64,128PROTAB		DW	DRONE_HIBLOCK		;high block		DW	DRONE_DUCKBLOK		;low block		DW	DRONE_DUCK		;uppercut		DW	DRONE_SWEEP		;sweep		DW	DRONE_HIKICK		;high kick		DW	DRONE_HIPUNCH		;high punch		DW	ATTACK_PUSSY		;low kick		DW	DRONE_ROUNDHOUSE	;roundhouseDRONE_PRO_MOVE	CALL	GET_HIS_DATA		LD	B,A		;B = MOVE DATA					;C = PROMOVE		LD	A,C		;IF C = 0 THEN NO MOVE		AND	A		;SO DO ANYTHING		JP	Z,BAD_COUNTER		CP	_RUNAWAY	;SHOULD I RUNAWAY		JP	Z,BACKOFF1				LDX	A,DAMAGE	;AM I GETTING MY ARSE KICKED		CP	5		JP	C,@NEXT		;IF YES BE DEFENSIVE			;LD	A,C		;ARE THERE ANY BLOCKS		;AND	HB+LB		;JP	Z,@NEXT		;JUMP IF NOT		LD	C,A		;JUST BLOCK !!	@NEXT		CALL	RANDOM		;GET RND 0 - 7		AND	7		LD	E,A		;IN DE		LD	D,0		LD	HL,MASKS	;GET MASK		ADD	HL,DE		LD	B,(HL)		;IN B				LD	A,C		;GET PROMOVE BITS		AND	B		JP	NZ,@THISPRO		JP	@NEXT@THISPRO	LD	HL,PROTAB		LD	A,E		CALL	GET_WORD_HL		JP	Z,DRONE_ENTRY		JP	(HL)******************************************	     DRONE PRO ATTACK*****************************************DRONE_PRO_ATTACK		CALL	GET_HIS_DATA		LD	B,A		;B = MOVE DATA					;C = PROMOVE		LD	A,C		;IF C = 0 THEN NO MOVE		AND	A		;SO DO ANYTHING		JP	Z,BAD_COUNTER		CP	_RUNAWAY	;SHOULD I RUNAWAY		JP	Z,BACKOFF1						LD	A,C			;GET JUST ATTACKS		AND	LK+HK+SW+HP+RH+UC				JP	Z,DRONE_HIPUNCH		LD	C,A@NEXT		CALL	RANDOM		;GET RND 0 - 7		AND	7		LD	E,A		;IN DE		LD	D,0		LD	HL,MASKS	;GET MASK		ADD	HL,DE		LD	B,(HL)		;IN B				LD	A,C		;GET PROMOVE BITS		AND	B		JP	NZ,@THISPRO		JP	@NEXT@THISPRO	LD	HL,PROTAB		LD	A,E		CALL	GET_WORD_HL		JP	Z,DRONE_ENTRY		JP	(HL)******************************************	    EVASIVE BACK AWAY*****************************************BACKOFF1	JP	DRONE_BACKOFF****************************************** UPPERCUT AFTER DUCKING AN ATTACK ?*****************************************ASK_DUCK_UP	DIFFS	100,420,500,570,600,650,700,750,800,900****************************************** UPPERCUT AFTER DUCKING AN ATTACK ?*****************************************ASK_DUCK_ABUSE	DIFFS	50,100,200,300,400,650,700,750,800,900****************************************** ATTACK WITH HARD MOVES*****************************************ASK_HARD_ATTACK	DIFFS	0,300,500,650,675,700,750,800,850,950****************************************** BLOCK KNEE ATTACK ?*****************************************ASK_BLOCK_KNEE	DIFFS	100,200,250,300,450,550,600,650,700,800****************************************** GENERIC BLOCK ? (USE THIS AS A GENERIC CHOICE)*****************************************ASK_GENERIC_DEFENSE	DIFFS	250,500,600,650,750,800,850,900,925,950****************************************** GENERIC BLOCK ? (USE THIS AS A GENERIC CHOICE)*****************************************ASK_BLOCK_DEFENSE	DIFFS	300,450,550,600,750,800,925,950,950,950****************************************** SHOULD I BLOCK A FLYING KICK/PUNCH*****************************************ASK_FLYKP	DIFFS	200,300,330,360,500,550,600,650,750,800****************************************** SHOULD I THROW MY PROJECTILE ?*****************************************ASK_PROJ	DIFFS	0,100,340,400,450,550,575,600,650,800****************************************** SHOULD I REACT TO DUCK KICK*****************************************ASK_R_DUCK_KICK	DIFFS	200,550,600,660,700,750,800,850,875,900	****************************************** SHOULD I STAND STILL AND MAKE THINGS EASY FOR OPPONENT*****************************************ASK_STAND_STILL	DIFFS	800,800,700,700,600,500,400,300,300,100****************************************** SHOULD I DO A PRO-MOVE (DRONE)*****************************************ASK_PRO_DEFENSEASK_PRO_ATTACK	DIFFS	350,500,650,750,800,850,900,950,999,999****************************************** SHOULD I DO MY HANDY LONG DISTANCE SUPER ATTACK*****************************************ASK_SUPER_ATTACK	DIFFS	0,200,300,420,440,450,460,480,500,550*********************************************************************************			GORO'S INTELLEGENCE*************************************************************************************************************************         MAIN ENTRY FOR GORO****************************************GORO_DECISION	LD	HL,ASK_STAND_STILL	;SHOULD DRONE STAND STILL		CALL	ASK_MR_DIFF		JP	NC,GORO_STILL		;NO THEN JUMPGORO_RET1	CALL	SHOULD_DRONE_ZAP		JP	C,FIRE_IT		JP	GORO_STALKGORO_RET2	;LD	HL,ASK_GENERIC_DEFENSE		;CALL	ASK_MR_DIFF		;JP	NC,DRONE_ENTRY		;CALL	GET_HIS_DATA		;TEST HIS STATUS		;BIT	_FLOPBIT,A		;JP	NZ,DRONE_ENTRY		LD	HL,GORO_PUNRET			;DRONE_BACKOFF		LD	A,4		JP	DRONE_RFPGORO_PUNRET	LD	A,128		CALL	RANDPER		JP	C,GORO_BACKOFF		;GORO BACKUP		JP	BACKFIRE		;JUMP BACK AND FIRE*****************************************         SHOULD GORO JUMP****************************************GORO_BACKOFF	CALL	IS_HE_DUCKING		JP	NC,DRONE_ENTRY		LD	HL,GOROJUMP		STX	D0,5		LD	A,SEQ_BACKOFF		JP	DRONE_SEQ_PLAY_D0*****************************************    	   JUMP BACK AND FIRE****************************************BACKFIRE	LD	HL,GOROFIRE_IT		LD	A,SEQ_GORO_BJUMP		JP	DRONE_SEQ_PLAYGOROFIRE_IT	CALL	FACE_HIM		JP	FIRE_IT*****************************************         SHOULD GORO JUMP****************************************SHOULD_GORO_JUMP		LD	A,128		CALL	RANDPER		JP	NC,@NOJUMP		CALL	FIND_MHD		CP	9		JP	NZ,@NOJUMP		SCF		RET@NOJUMP		OR	A		RET*****************************************             GORO JUMP****************************************GOROJUMP	LD	HL,DRONE_ENTRY		LD	A,SEQ_GORO_JUMP		JP	DRONE_SEQ_PLAY*****************************************	      GORO STAND STILL****************************************GORO_STILL	CALL	RANDOM			;RANDOM TIME TO STAND STILL		AND	7		INC	A			;STOP ZERO		      	STX	D0,A		LD	A,SEQ_STANCE		CALL	SET_ANI		MOVE	GORO_SS		RETGORO_SS		CALL	FACE_HIM		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		CALL	DRONE_BEWARE		;KEEP ON THE LOOKOUT FOR		   				;FUNNY STUFF	  	LDX	A,D0			;DEC NO MOVE COUNT		DEC	A		STX	D0,A		RET	NZ		JP	GORO_RET1*****************************************	     STALK OPPENENT****************************************GORO_STALK	CALL	FIND_MHD		CP	6		JP	C,GORO_RET2			;KEEP ON STALKING			LD	A,SEQ_STALK		CALL	SET_ANI		MOVE	GORO_ST				;SLEEP HERE		GORO_ST		CALL	FACE_HIM		CALL	DO_PROCS		CALL	HAS_GAME_FINISHED		CALL	DRONE_BEWARE		CALL	PUSH_AWAY	 	CALL	FIND_MHD		CP	ATTACK_DIST		JP	C,GORO_RET2			;KEEP ON STALKING		CALL	SHOULD_GORO_JUMP		JP	C,GOROJUMP		RET*********************************************************************************			EMPOROR'S INTELLEGENCE*************************************************************************************************************************        MAIN ENTRY FOR EMPOROR****************************************EMP_DECISION	LD	HL,ASK_STAND_STILL	;SHOULD DRONE STAND STILL		CALL	ASK_MR_DIFF		JP	C,EMP_STILL		;NO THEN JUMPEMPRET1		CALL	SHOULD_DRONE_ZAP		JP	C,FIRE_IT		LD	A,10		CALL	RANDPER		JP	C,EMP_MORPH_START		CALL	FIND_MHD		CP	9		JP	C,EMP_BACKOFF		CALL	FIND_MHD		CP	13		JP	NC,EMP_STALK		JP	DRONE_ENTRY*****************************************	  EMPOROR STAND STILL****************************************EMP_STILL	CALL	RANDOM			;RANDOM TIME TO STAND STILL		AND	3		INC	A			;STOP ZERO		      	STX	D0,A		LD	HL,EMPRET1		LD	A,SEQ_STANCE		JP	DRONE_SEQ_PLAY_D0*****************************************	     STALK OPPENENT****************************************EMP_BACKOFF	STX	XSPD,4			;SET XVEL		CALL	LOR_VEL		STX	D0,6			;PLAY 5 FRAMES		LD	HL,DRONE_ENTRY		;RETURN TO STANCE		LD	A,SEQ_RWALK		;PLAY (SEW_RWALK)		JP	DRONE_SEQ_PLAY_D0*****************************************	     STALK OPPENENT****************************************EMP_STALK	STX	XSPD,-4		CALL	LOR_VEL		STX	D0,6   		LD	HL,DRONE_ENTRY		LD	A,SEQ_WALK		JP	DRONE_SEQ_PLAY_D0*****************************************	     EMPOROR MORPH****************************************EMP_MORPH_START	LDX	A,FLAGS		OR	EMPOROR		STX	FLAGS,A		LD	A,SEQ_MORPH		JP	PLAY_ANI*****************************************     	     DEC MORPH TIME****************************************MORPH_PROC			LDX	A,SBASE			;IF I'M ALREADY THE EMP		CP	_EMP			;DON'T COUNT DOWN		RET	Z		LDX	A,FLAGS			;TEST IF I'VE MORPHED		AND	EMPOROR		RET	Z		;CALL	FIND_MHD		;CP	7		;RET	C		LD	A,(EMPTIME)		DEC	A		LD	(EMPTIME),A		RET	NZ		POP	HL			;DROP RETURN ADDRESS		LD	A,SEQ_MORPH		JP	PLAY_ANI*****************************************     ANIMATION DRIVER MORPH CALL****************************************ANI_MORPH_PROC	CALL	RANDOM		AND	3		ADD	A,5		LD	(EMPTIME),A		LDX	A,SBASE		CP	_EMP		JP	Z,@MORPH		LDX	A,FLAGS			;CLEAR SUBZERO FLAG		RES	TWOCOLBIT,A		STX	FLAGS,A		STX	SBASE,_EMP		STX	XOFF,0		STX	YOFF,0		RET@MORPH		LDX	A,FLAGS			;CLEAR SUBZERO FLAG		RES	TWOCOLBIT,A		STX	FLAGS,A		CALL	RANDOM		AND	7		JP	NZ,@M1		LD	A,_GORO@M1		STX	SBASE,A		CP	_SUBZERO		;IF MORPHING TO SUBZERO		JP	NZ,@1			;SET TWO COLOR BIT		LDX	A,FLAGS		SET	TWOCOLBIT,A		STX	FLAGS,A@1		LDX	A,SBASE		CP	_GORO		JP	Z,GORO_OFF		STX	XOFF,0		STX	YOFF,0		RETGORO_OFF	STX	XOFF,0		STX	YOFF,-30		RET*****************************************      ANICALL FOR EMPORORS DEATH****************************************		EMPTEST		LDX	A,FLAGS		AND	EMPOROR		RET	Z		STX	SBASE,_EMP		RET